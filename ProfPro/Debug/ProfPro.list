
ProfPro.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000870  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a18  08000a20  00010a20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a18  08000a18  00010a20  2**0
                  CONTENTS
  4 .ARM          00000000  08000a18  08000a18  00010a20  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a18  08000a20  00010a20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a18  08000a18  00010a18  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000a1c  08000a1c  00010a1c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010a20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010a20  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010a20  2**0
                  CONTENTS, READONLY
 13 .debug_info   00001153  00000000  00000000  00010a50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000053b  00000000  00000000  00011ba3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000140  00000000  00000000  000120e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000e8  00000000  00000000  00012220  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001495  00000000  00000000  00012308  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000142c  00000000  00000000  0001379d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000056a3  00000000  00000000  00014bc9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0001a26c  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000358  00000000  00000000  0001a2bc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000a00 	.word	0x08000a00

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000a00 	.word	0x08000a00

080001e8 <nvic_irqno_enable>:
 *  Created on: 7 Oca 2023
 *      Author: metab
 */
#include "coreM4.h"

void nvic_irqno_enable(uint8_t irq_num){
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	4603      	mov	r3, r0
 80001f0:	71fb      	strb	r3, [r7, #7]
	if(irq_num < 32)
 80001f2:	79fb      	ldrb	r3, [r7, #7]
 80001f4:	2b1f      	cmp	r3, #31
 80001f6:	d809      	bhi.n	800020c <nvic_irqno_enable+0x24>
		NVIC_ISERx->NVIC_ISER0 |= (1U<<irq_num );
 80001f8:	4b16      	ldr	r3, [pc, #88]	; (8000254 <nvic_irqno_enable+0x6c>)
 80001fa:	681a      	ldr	r2, [r3, #0]
 80001fc:	79fb      	ldrb	r3, [r7, #7]
 80001fe:	2101      	movs	r1, #1
 8000200:	fa01 f303 	lsl.w	r3, r1, r3
 8000204:	4913      	ldr	r1, [pc, #76]	; (8000254 <nvic_irqno_enable+0x6c>)
 8000206:	4313      	orrs	r3, r2
 8000208:	600b      	str	r3, [r1, #0]
	else if( irq_num < 64)
		NVIC_ISERx->NVIC_ISER1 |= (1U<<(irq_num%32));
	else if(irq_num <= 81)
		NVIC_ISERx->NVIC_ISER2 |= (1U<<(irq_num%32));

}
 800020a:	e01c      	b.n	8000246 <nvic_irqno_enable+0x5e>
	else if( irq_num < 64)
 800020c:	79fb      	ldrb	r3, [r7, #7]
 800020e:	2b3f      	cmp	r3, #63	; 0x3f
 8000210:	d80b      	bhi.n	800022a <nvic_irqno_enable+0x42>
		NVIC_ISERx->NVIC_ISER1 |= (1U<<(irq_num%32));
 8000212:	4b10      	ldr	r3, [pc, #64]	; (8000254 <nvic_irqno_enable+0x6c>)
 8000214:	685a      	ldr	r2, [r3, #4]
 8000216:	79fb      	ldrb	r3, [r7, #7]
 8000218:	f003 031f 	and.w	r3, r3, #31
 800021c:	2101      	movs	r1, #1
 800021e:	fa01 f303 	lsl.w	r3, r1, r3
 8000222:	490c      	ldr	r1, [pc, #48]	; (8000254 <nvic_irqno_enable+0x6c>)
 8000224:	4313      	orrs	r3, r2
 8000226:	604b      	str	r3, [r1, #4]
}
 8000228:	e00d      	b.n	8000246 <nvic_irqno_enable+0x5e>
	else if(irq_num <= 81)
 800022a:	79fb      	ldrb	r3, [r7, #7]
 800022c:	2b51      	cmp	r3, #81	; 0x51
 800022e:	d80a      	bhi.n	8000246 <nvic_irqno_enable+0x5e>
		NVIC_ISERx->NVIC_ISER2 |= (1U<<(irq_num%32));
 8000230:	4b08      	ldr	r3, [pc, #32]	; (8000254 <nvic_irqno_enable+0x6c>)
 8000232:	689a      	ldr	r2, [r3, #8]
 8000234:	79fb      	ldrb	r3, [r7, #7]
 8000236:	f003 031f 	and.w	r3, r3, #31
 800023a:	2101      	movs	r1, #1
 800023c:	fa01 f303 	lsl.w	r3, r1, r3
 8000240:	4904      	ldr	r1, [pc, #16]	; (8000254 <nvic_irqno_enable+0x6c>)
 8000242:	4313      	orrs	r3, r2
 8000244:	608b      	str	r3, [r1, #8]
}
 8000246:	bf00      	nop
 8000248:	370c      	adds	r7, #12
 800024a:	46bd      	mov	sp, r7
 800024c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000250:	4770      	bx	lr
 8000252:	bf00      	nop
 8000254:	e000e100 	.word	0xe000e100

08000258 <nvic_irqno_disable>:

void nvic_irqno_disable(uint8_t irq_num){
 8000258:	b480      	push	{r7}
 800025a:	b083      	sub	sp, #12
 800025c:	af00      	add	r7, sp, #0
 800025e:	4603      	mov	r3, r0
 8000260:	71fb      	strb	r3, [r7, #7]
	if(irq_num < 32)
 8000262:	79fb      	ldrb	r3, [r7, #7]
 8000264:	2b1f      	cmp	r3, #31
 8000266:	d809      	bhi.n	800027c <nvic_irqno_disable+0x24>
		NVIC_ICERx->NVIC_ICER0 |= ((1U<<irq_num ));
 8000268:	4b16      	ldr	r3, [pc, #88]	; (80002c4 <nvic_irqno_disable+0x6c>)
 800026a:	681a      	ldr	r2, [r3, #0]
 800026c:	79fb      	ldrb	r3, [r7, #7]
 800026e:	2101      	movs	r1, #1
 8000270:	fa01 f303 	lsl.w	r3, r1, r3
 8000274:	4913      	ldr	r1, [pc, #76]	; (80002c4 <nvic_irqno_disable+0x6c>)
 8000276:	4313      	orrs	r3, r2
 8000278:	600b      	str	r3, [r1, #0]
	else if( irq_num < 64)
		NVIC_ICERx->NVIC_ICER1 |= (1U<<(irq_num%32));
	else if(irq_num <= 81)
		NVIC_ICERx->NVIC_ICER2 |= (1U<<(irq_num%32));
}
 800027a:	e01c      	b.n	80002b6 <nvic_irqno_disable+0x5e>
	else if( irq_num < 64)
 800027c:	79fb      	ldrb	r3, [r7, #7]
 800027e:	2b3f      	cmp	r3, #63	; 0x3f
 8000280:	d80b      	bhi.n	800029a <nvic_irqno_disable+0x42>
		NVIC_ICERx->NVIC_ICER1 |= (1U<<(irq_num%32));
 8000282:	4b10      	ldr	r3, [pc, #64]	; (80002c4 <nvic_irqno_disable+0x6c>)
 8000284:	685a      	ldr	r2, [r3, #4]
 8000286:	79fb      	ldrb	r3, [r7, #7]
 8000288:	f003 031f 	and.w	r3, r3, #31
 800028c:	2101      	movs	r1, #1
 800028e:	fa01 f303 	lsl.w	r3, r1, r3
 8000292:	490c      	ldr	r1, [pc, #48]	; (80002c4 <nvic_irqno_disable+0x6c>)
 8000294:	4313      	orrs	r3, r2
 8000296:	604b      	str	r3, [r1, #4]
}
 8000298:	e00d      	b.n	80002b6 <nvic_irqno_disable+0x5e>
	else if(irq_num <= 81)
 800029a:	79fb      	ldrb	r3, [r7, #7]
 800029c:	2b51      	cmp	r3, #81	; 0x51
 800029e:	d80a      	bhi.n	80002b6 <nvic_irqno_disable+0x5e>
		NVIC_ICERx->NVIC_ICER2 |= (1U<<(irq_num%32));
 80002a0:	4b08      	ldr	r3, [pc, #32]	; (80002c4 <nvic_irqno_disable+0x6c>)
 80002a2:	689a      	ldr	r2, [r3, #8]
 80002a4:	79fb      	ldrb	r3, [r7, #7]
 80002a6:	f003 031f 	and.w	r3, r3, #31
 80002aa:	2101      	movs	r1, #1
 80002ac:	fa01 f303 	lsl.w	r3, r1, r3
 80002b0:	4904      	ldr	r1, [pc, #16]	; (80002c4 <nvic_irqno_disable+0x6c>)
 80002b2:	4313      	orrs	r3, r2
 80002b4:	608b      	str	r3, [r1, #8]
}
 80002b6:	bf00      	nop
 80002b8:	370c      	adds	r7, #12
 80002ba:	46bd      	mov	sp, r7
 80002bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c0:	4770      	bx	lr
 80002c2:	bf00      	nop
 80002c4:	e000e180 	.word	0xe000e180

080002c8 <systick_config>:



void systick_config(uint32_t tick){
 80002c8:	b480      	push	{r7}
 80002ca:	b083      	sub	sp, #12
 80002cc:	af00      	add	r7, sp, #0
 80002ce:	6078      	str	r0, [r7, #4]
	//1-Program reload value
	//2-Clear current value
	//3-Program Control and Status register

	SYSTIC->SYST_RVR= tick -1;
 80002d0:	4a0f      	ldr	r2, [pc, #60]	; (8000310 <systick_config+0x48>)
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	3b01      	subs	r3, #1
 80002d6:	6053      	str	r3, [r2, #4]
	SYSTIC->SYST_CVR= 0;
 80002d8:	4b0d      	ldr	r3, [pc, #52]	; (8000310 <systick_config+0x48>)
 80002da:	2200      	movs	r2, #0
 80002dc:	609a      	str	r2, [r3, #8]
	SYSTIC->SYST_CSR |= (1U<<2);
 80002de:	4b0c      	ldr	r3, [pc, #48]	; (8000310 <systick_config+0x48>)
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	4a0b      	ldr	r2, [pc, #44]	; (8000310 <systick_config+0x48>)
 80002e4:	f043 0304 	orr.w	r3, r3, #4
 80002e8:	6013      	str	r3, [r2, #0]
	SYSTIC->SYST_CSR |= (1U<<1);
 80002ea:	4b09      	ldr	r3, [pc, #36]	; (8000310 <systick_config+0x48>)
 80002ec:	681b      	ldr	r3, [r3, #0]
 80002ee:	4a08      	ldr	r2, [pc, #32]	; (8000310 <systick_config+0x48>)
 80002f0:	f043 0302 	orr.w	r3, r3, #2
 80002f4:	6013      	str	r3, [r2, #0]
	SYSTIC->SYST_CSR |= (1U<<0); //COUNTER ENABLE
 80002f6:	4b06      	ldr	r3, [pc, #24]	; (8000310 <systick_config+0x48>)
 80002f8:	681b      	ldr	r3, [r3, #0]
 80002fa:	4a05      	ldr	r2, [pc, #20]	; (8000310 <systick_config+0x48>)
 80002fc:	f043 0301 	orr.w	r3, r3, #1
 8000300:	6013      	str	r3, [r2, #0]

}
 8000302:	bf00      	nop
 8000304:	370c      	adds	r7, #12
 8000306:	46bd      	mov	sp, r7
 8000308:	f85d 7b04 	ldr.w	r7, [sp], #4
 800030c:	4770      	bx	lr
 800030e:	bf00      	nop
 8000310:	e000e010 	.word	0xe000e010

08000314 <gpio_perip_en>:
 */
#include "gpio.h"



PRIVATE void gpio_perip_en(GPIO_RegDef_t * pGpiox){
 8000314:	b480      	push	{r7}
 8000316:	b083      	sub	sp, #12
 8000318:	af00      	add	r7, sp, #0
 800031a:	6078      	str	r0, [r7, #4]
	if(pGpiox==GPIOA)
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	4a33      	ldr	r2, [pc, #204]	; (80003ec <gpio_perip_en+0xd8>)
 8000320:	4293      	cmp	r3, r2
 8000322:	d106      	bne.n	8000332 <gpio_perip_en+0x1e>
		GPIOA_CLOCK_ENABLE();
 8000324:	4b32      	ldr	r3, [pc, #200]	; (80003f0 <gpio_perip_en+0xdc>)
 8000326:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000328:	4a31      	ldr	r2, [pc, #196]	; (80003f0 <gpio_perip_en+0xdc>)
 800032a:	f043 0301 	orr.w	r3, r3, #1
 800032e:	6313      	str	r3, [r2, #48]	; 0x30
		GPIOG_CLOCK_ENABLE();
	else if(pGpiox==GPIOH)
		GPIOH_CLOCK_ENABLE();
	else if(pGpiox==GPIOI)
		GPIOI_CLOCK_ENABLE();
}
 8000330:	e056      	b.n	80003e0 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOB)
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	4a2f      	ldr	r2, [pc, #188]	; (80003f4 <gpio_perip_en+0xe0>)
 8000336:	4293      	cmp	r3, r2
 8000338:	d106      	bne.n	8000348 <gpio_perip_en+0x34>
		GPIOB_CLOCK_ENABLE();
 800033a:	4b2d      	ldr	r3, [pc, #180]	; (80003f0 <gpio_perip_en+0xdc>)
 800033c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033e:	4a2c      	ldr	r2, [pc, #176]	; (80003f0 <gpio_perip_en+0xdc>)
 8000340:	f043 0302 	orr.w	r3, r3, #2
 8000344:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000346:	e04b      	b.n	80003e0 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOC)
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	4a2b      	ldr	r2, [pc, #172]	; (80003f8 <gpio_perip_en+0xe4>)
 800034c:	4293      	cmp	r3, r2
 800034e:	d106      	bne.n	800035e <gpio_perip_en+0x4a>
		GPIOC_CLOCK_ENABLE();
 8000350:	4b27      	ldr	r3, [pc, #156]	; (80003f0 <gpio_perip_en+0xdc>)
 8000352:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000354:	4a26      	ldr	r2, [pc, #152]	; (80003f0 <gpio_perip_en+0xdc>)
 8000356:	f043 0304 	orr.w	r3, r3, #4
 800035a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800035c:	e040      	b.n	80003e0 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOD)
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	4a26      	ldr	r2, [pc, #152]	; (80003fc <gpio_perip_en+0xe8>)
 8000362:	4293      	cmp	r3, r2
 8000364:	d106      	bne.n	8000374 <gpio_perip_en+0x60>
		GPIOD_CLOCK_ENABLE();
 8000366:	4b22      	ldr	r3, [pc, #136]	; (80003f0 <gpio_perip_en+0xdc>)
 8000368:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036a:	4a21      	ldr	r2, [pc, #132]	; (80003f0 <gpio_perip_en+0xdc>)
 800036c:	f043 0308 	orr.w	r3, r3, #8
 8000370:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000372:	e035      	b.n	80003e0 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOE)
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	4a22      	ldr	r2, [pc, #136]	; (8000400 <gpio_perip_en+0xec>)
 8000378:	4293      	cmp	r3, r2
 800037a:	d106      	bne.n	800038a <gpio_perip_en+0x76>
		GPIOE_CLOCK_ENABLE();
 800037c:	4b1c      	ldr	r3, [pc, #112]	; (80003f0 <gpio_perip_en+0xdc>)
 800037e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000380:	4a1b      	ldr	r2, [pc, #108]	; (80003f0 <gpio_perip_en+0xdc>)
 8000382:	f043 0310 	orr.w	r3, r3, #16
 8000386:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000388:	e02a      	b.n	80003e0 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOF)
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	4a1d      	ldr	r2, [pc, #116]	; (8000404 <gpio_perip_en+0xf0>)
 800038e:	4293      	cmp	r3, r2
 8000390:	d106      	bne.n	80003a0 <gpio_perip_en+0x8c>
		GPIOF_CLOCK_ENABLE();
 8000392:	4b17      	ldr	r3, [pc, #92]	; (80003f0 <gpio_perip_en+0xdc>)
 8000394:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000396:	4a16      	ldr	r2, [pc, #88]	; (80003f0 <gpio_perip_en+0xdc>)
 8000398:	f043 0320 	orr.w	r3, r3, #32
 800039c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800039e:	e01f      	b.n	80003e0 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOG)
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	4a19      	ldr	r2, [pc, #100]	; (8000408 <gpio_perip_en+0xf4>)
 80003a4:	4293      	cmp	r3, r2
 80003a6:	d106      	bne.n	80003b6 <gpio_perip_en+0xa2>
		GPIOG_CLOCK_ENABLE();
 80003a8:	4b11      	ldr	r3, [pc, #68]	; (80003f0 <gpio_perip_en+0xdc>)
 80003aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ac:	4a10      	ldr	r2, [pc, #64]	; (80003f0 <gpio_perip_en+0xdc>)
 80003ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003b2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b4:	e014      	b.n	80003e0 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOH)
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	4a14      	ldr	r2, [pc, #80]	; (800040c <gpio_perip_en+0xf8>)
 80003ba:	4293      	cmp	r3, r2
 80003bc:	d106      	bne.n	80003cc <gpio_perip_en+0xb8>
		GPIOH_CLOCK_ENABLE();
 80003be:	4b0c      	ldr	r3, [pc, #48]	; (80003f0 <gpio_perip_en+0xdc>)
 80003c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c2:	4a0b      	ldr	r2, [pc, #44]	; (80003f0 <gpio_perip_en+0xdc>)
 80003c4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003c8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ca:	e009      	b.n	80003e0 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOI)
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	4a10      	ldr	r2, [pc, #64]	; (8000410 <gpio_perip_en+0xfc>)
 80003d0:	4293      	cmp	r3, r2
 80003d2:	d105      	bne.n	80003e0 <gpio_perip_en+0xcc>
		GPIOI_CLOCK_ENABLE();
 80003d4:	4b06      	ldr	r3, [pc, #24]	; (80003f0 <gpio_perip_en+0xdc>)
 80003d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d8:	4a05      	ldr	r2, [pc, #20]	; (80003f0 <gpio_perip_en+0xdc>)
 80003da:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80003de:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e0:	bf00      	nop
 80003e2:	370c      	adds	r7, #12
 80003e4:	46bd      	mov	sp, r7
 80003e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ea:	4770      	bx	lr
 80003ec:	40020000 	.word	0x40020000
 80003f0:	40023800 	.word	0x40023800
 80003f4:	40020400 	.word	0x40020400
 80003f8:	40020800 	.word	0x40020800
 80003fc:	40020c00 	.word	0x40020c00
 8000400:	40021000 	.word	0x40021000
 8000404:	40021400 	.word	0x40021400
 8000408:	40021800 	.word	0x40021800
 800040c:	40021c00 	.word	0x40021c00
 8000410:	40022000 	.word	0x40022000

08000414 <get_port_code>:


PRIVATE uint8_t get_port_code(const GPIO_RegDef_t * pGpioX){
 8000414:	b480      	push	{r7}
 8000416:	b083      	sub	sp, #12
 8000418:	af00      	add	r7, sp, #0
 800041a:	6078      	str	r0, [r7, #4]
	if(pGpioX==GPIOA)
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	4a1d      	ldr	r2, [pc, #116]	; (8000494 <get_port_code+0x80>)
 8000420:	4293      	cmp	r3, r2
 8000422:	d101      	bne.n	8000428 <get_port_code+0x14>
		return GPIOA_PORT_CODE;
 8000424:	2300      	movs	r3, #0
 8000426:	e02f      	b.n	8000488 <get_port_code+0x74>
	else if(pGpioX==GPIOB)
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	4a1b      	ldr	r2, [pc, #108]	; (8000498 <get_port_code+0x84>)
 800042c:	4293      	cmp	r3, r2
 800042e:	d101      	bne.n	8000434 <get_port_code+0x20>
		return GPIOB_PORT_CODE;
 8000430:	2301      	movs	r3, #1
 8000432:	e029      	b.n	8000488 <get_port_code+0x74>
	else if(pGpioX==GPIOC)
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	4a19      	ldr	r2, [pc, #100]	; (800049c <get_port_code+0x88>)
 8000438:	4293      	cmp	r3, r2
 800043a:	d101      	bne.n	8000440 <get_port_code+0x2c>
		return GPIOC_PORT_CODE;
 800043c:	2302      	movs	r3, #2
 800043e:	e023      	b.n	8000488 <get_port_code+0x74>
	else if(pGpioX==GPIOD)
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	4a17      	ldr	r2, [pc, #92]	; (80004a0 <get_port_code+0x8c>)
 8000444:	4293      	cmp	r3, r2
 8000446:	d101      	bne.n	800044c <get_port_code+0x38>
		return GPIOD_PORT_CODE;
 8000448:	2303      	movs	r3, #3
 800044a:	e01d      	b.n	8000488 <get_port_code+0x74>
	else if(pGpioX==GPIOE)
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	4a15      	ldr	r2, [pc, #84]	; (80004a4 <get_port_code+0x90>)
 8000450:	4293      	cmp	r3, r2
 8000452:	d101      	bne.n	8000458 <get_port_code+0x44>
		return GPIOE_PORT_CODE;
 8000454:	2304      	movs	r3, #4
 8000456:	e017      	b.n	8000488 <get_port_code+0x74>
	else if(pGpioX==GPIOF)
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	4a13      	ldr	r2, [pc, #76]	; (80004a8 <get_port_code+0x94>)
 800045c:	4293      	cmp	r3, r2
 800045e:	d101      	bne.n	8000464 <get_port_code+0x50>
		return GPIOF_PORT_CODE;
 8000460:	2305      	movs	r3, #5
 8000462:	e011      	b.n	8000488 <get_port_code+0x74>
	else if(pGpioX==GPIOG)
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	4a11      	ldr	r2, [pc, #68]	; (80004ac <get_port_code+0x98>)
 8000468:	4293      	cmp	r3, r2
 800046a:	d101      	bne.n	8000470 <get_port_code+0x5c>
		return GPIOG_PORT_CODE;
 800046c:	2306      	movs	r3, #6
 800046e:	e00b      	b.n	8000488 <get_port_code+0x74>
	else if(pGpioX==GPIOH)
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	4a0f      	ldr	r2, [pc, #60]	; (80004b0 <get_port_code+0x9c>)
 8000474:	4293      	cmp	r3, r2
 8000476:	d101      	bne.n	800047c <get_port_code+0x68>
		return GPIOH_PORT_CODE;
 8000478:	2307      	movs	r3, #7
 800047a:	e005      	b.n	8000488 <get_port_code+0x74>
	else if(pGpioX==GPIOI)
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	4a0d      	ldr	r2, [pc, #52]	; (80004b4 <get_port_code+0xa0>)
 8000480:	4293      	cmp	r3, r2
 8000482:	d101      	bne.n	8000488 <get_port_code+0x74>
		return GPIOI_PORT_CODE;
 8000484:	2308      	movs	r3, #8
 8000486:	e7ff      	b.n	8000488 <get_port_code+0x74>
}
 8000488:	4618      	mov	r0, r3
 800048a:	370c      	adds	r7, #12
 800048c:	46bd      	mov	sp, r7
 800048e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000492:	4770      	bx	lr
 8000494:	40020000 	.word	0x40020000
 8000498:	40020400 	.word	0x40020400
 800049c:	40020800 	.word	0x40020800
 80004a0:	40020c00 	.word	0x40020c00
 80004a4:	40021000 	.word	0x40021000
 80004a8:	40021400 	.word	0x40021400
 80004ac:	40021800 	.word	0x40021800
 80004b0:	40021c00 	.word	0x40021c00
 80004b4:	40022000 	.word	0x40022000

080004b8 <gpio_init>:

void gpio_init(GPIO_Handle_t * pGpio_handle){
 80004b8:	b580      	push	{r7, lr}
 80004ba:	b086      	sub	sp, #24
 80004bc:	af00      	add	r7, sp, #0
 80004be:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 80004c0:	2300      	movs	r3, #0
 80004c2:	617b      	str	r3, [r7, #20]

	//clock aktif et
	gpio_perip_en(pGpio_handle->pGpioX);
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	681b      	ldr	r3, [r3, #0]
 80004c8:	4618      	mov	r0, r3
 80004ca:	f7ff ff23 	bl	8000314 <gpio_perip_en>
	volatile uint32_t * p_rcc_ahb1_reg=(uint32_t*)(0x40023800+0x30);
	*p_rcc_ahb1_reg |=(1u<<3);
*/

	//pin mode ayarla
	if(pGpio_handle->gPIO_pinConfig.pin_mode<=GPIO_MODE_ANALOG){
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	795b      	ldrb	r3, [r3, #5]
 80004d2:	2b03      	cmp	r3, #3
 80004d4:	d820      	bhi.n	8000518 <gpio_init+0x60>
		temp = (pGpio_handle->gPIO_pinConfig.pin_mode << (2 * pGpio_handle->gPIO_pinConfig.pin_number));
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	795b      	ldrb	r3, [r3, #5]
 80004da:	461a      	mov	r2, r3
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	791b      	ldrb	r3, [r3, #4]
 80004e0:	005b      	lsls	r3, r3, #1
 80004e2:	fa02 f303 	lsl.w	r3, r2, r3
 80004e6:	617b      	str	r3, [r7, #20]
		pGpio_handle->pGpioX->MODER &= ~(0b11<<(2*pGpio_handle->gPIO_pinConfig.pin_number));
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	681b      	ldr	r3, [r3, #0]
 80004ec:	681a      	ldr	r2, [r3, #0]
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	791b      	ldrb	r3, [r3, #4]
 80004f2:	005b      	lsls	r3, r3, #1
 80004f4:	2103      	movs	r1, #3
 80004f6:	fa01 f303 	lsl.w	r3, r1, r3
 80004fa:	43db      	mvns	r3, r3
 80004fc:	4619      	mov	r1, r3
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	681b      	ldr	r3, [r3, #0]
 8000502:	400a      	ands	r2, r1
 8000504:	601a      	str	r2, [r3, #0]
		pGpio_handle->pGpioX->MODER |=temp;
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	681b      	ldr	r3, [r3, #0]
 800050a:	6819      	ldr	r1, [r3, #0]
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	697a      	ldr	r2, [r7, #20]
 8000512:	430a      	orrs	r2, r1
 8000514:	601a      	str	r2, [r3, #0]
 8000516:	e07c      	b.n	8000612 <gpio_init+0x15a>
	}else{
		//interrupt mode
		if(pGpio_handle->gPIO_pinConfig.pin_mode==GPIO_MODE_FE_IT) //Only falling
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	795b      	ldrb	r3, [r3, #5]
 800051c:	2b04      	cmp	r3, #4
 800051e:	d115      	bne.n	800054c <gpio_init+0x94>
		{
			EXTI->FTSR |= (1U<<pGpio_handle->gPIO_pinConfig.pin_number); //falling set
 8000520:	4b6d      	ldr	r3, [pc, #436]	; (80006d8 <gpio_init+0x220>)
 8000522:	68da      	ldr	r2, [r3, #12]
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	791b      	ldrb	r3, [r3, #4]
 8000528:	4619      	mov	r1, r3
 800052a:	2301      	movs	r3, #1
 800052c:	408b      	lsls	r3, r1
 800052e:	496a      	ldr	r1, [pc, #424]	; (80006d8 <gpio_init+0x220>)
 8000530:	4313      	orrs	r3, r2
 8000532:	60cb      	str	r3, [r1, #12]
			EXTI->RTSR &= ~(1U<<pGpio_handle->gPIO_pinConfig.pin_number);//rising reset
 8000534:	4b68      	ldr	r3, [pc, #416]	; (80006d8 <gpio_init+0x220>)
 8000536:	689a      	ldr	r2, [r3, #8]
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	791b      	ldrb	r3, [r3, #4]
 800053c:	4619      	mov	r1, r3
 800053e:	2301      	movs	r3, #1
 8000540:	408b      	lsls	r3, r1
 8000542:	43db      	mvns	r3, r3
 8000544:	4964      	ldr	r1, [pc, #400]	; (80006d8 <gpio_init+0x220>)
 8000546:	4013      	ands	r3, r2
 8000548:	608b      	str	r3, [r1, #8]
 800054a:	e031      	b.n	80005b0 <gpio_init+0xf8>
		}
		else if(pGpio_handle->gPIO_pinConfig.pin_mode==GPIO_MODE_RE_IT) // only rising
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	795b      	ldrb	r3, [r3, #5]
 8000550:	2b05      	cmp	r3, #5
 8000552:	d115      	bne.n	8000580 <gpio_init+0xc8>
		{
			EXTI->RTSR |= (1U<<pGpio_handle->gPIO_pinConfig.pin_number);//rising set
 8000554:	4b60      	ldr	r3, [pc, #384]	; (80006d8 <gpio_init+0x220>)
 8000556:	689a      	ldr	r2, [r3, #8]
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	791b      	ldrb	r3, [r3, #4]
 800055c:	4619      	mov	r1, r3
 800055e:	2301      	movs	r3, #1
 8000560:	408b      	lsls	r3, r1
 8000562:	495d      	ldr	r1, [pc, #372]	; (80006d8 <gpio_init+0x220>)
 8000564:	4313      	orrs	r3, r2
 8000566:	608b      	str	r3, [r1, #8]
			EXTI->FTSR &= ~(1U<<pGpio_handle->gPIO_pinConfig.pin_number);//falling reset
 8000568:	4b5b      	ldr	r3, [pc, #364]	; (80006d8 <gpio_init+0x220>)
 800056a:	68da      	ldr	r2, [r3, #12]
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	791b      	ldrb	r3, [r3, #4]
 8000570:	4619      	mov	r1, r3
 8000572:	2301      	movs	r3, #1
 8000574:	408b      	lsls	r3, r1
 8000576:	43db      	mvns	r3, r3
 8000578:	4957      	ldr	r1, [pc, #348]	; (80006d8 <gpio_init+0x220>)
 800057a:	4013      	ands	r3, r2
 800057c:	60cb      	str	r3, [r1, #12]
 800057e:	e017      	b.n	80005b0 <gpio_init+0xf8>
		}
		else if(pGpio_handle->gPIO_pinConfig.pin_mode==GPIO_MODE_FRE_IT) // falling + rising
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	795b      	ldrb	r3, [r3, #5]
 8000584:	2b06      	cmp	r3, #6
 8000586:	d113      	bne.n	80005b0 <gpio_init+0xf8>
		{
			EXTI->RTSR |= (1U <<pGpio_handle->gPIO_pinConfig.pin_number); //rising set
 8000588:	4b53      	ldr	r3, [pc, #332]	; (80006d8 <gpio_init+0x220>)
 800058a:	689a      	ldr	r2, [r3, #8]
 800058c:	687b      	ldr	r3, [r7, #4]
 800058e:	791b      	ldrb	r3, [r3, #4]
 8000590:	4619      	mov	r1, r3
 8000592:	2301      	movs	r3, #1
 8000594:	408b      	lsls	r3, r1
 8000596:	4950      	ldr	r1, [pc, #320]	; (80006d8 <gpio_init+0x220>)
 8000598:	4313      	orrs	r3, r2
 800059a:	608b      	str	r3, [r1, #8]
			EXTI->FTSR |= (1U <<pGpio_handle->gPIO_pinConfig.pin_number); //falling set
 800059c:	4b4e      	ldr	r3, [pc, #312]	; (80006d8 <gpio_init+0x220>)
 800059e:	68da      	ldr	r2, [r3, #12]
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	791b      	ldrb	r3, [r3, #4]
 80005a4:	4619      	mov	r1, r3
 80005a6:	2301      	movs	r3, #1
 80005a8:	408b      	lsls	r3, r1
 80005aa:	494b      	ldr	r1, [pc, #300]	; (80006d8 <gpio_init+0x220>)
 80005ac:	4313      	orrs	r3, r2
 80005ae:	60cb      	str	r3, [r1, #12]
		}
		//used port pin selection by SYSCF_EXTICRx
		SYSCFG_CLOCK_ENABLE();
 80005b0:	4b4a      	ldr	r3, [pc, #296]	; (80006dc <gpio_init+0x224>)
 80005b2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80005b4:	4a49      	ldr	r2, [pc, #292]	; (80006dc <gpio_init+0x224>)
 80005b6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80005ba:	6453      	str	r3, [r2, #68]	; 0x44
		uint32_t syscfgr_exti_reg_no = pGpio_handle->gPIO_pinConfig.pin_number / 4;
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	791b      	ldrb	r3, [r3, #4]
 80005c0:	089b      	lsrs	r3, r3, #2
 80005c2:	b2db      	uxtb	r3, r3
 80005c4:	613b      	str	r3, [r7, #16]
		uint32_t syscfgr_exti_reg_bit_no = pGpio_handle->gPIO_pinConfig.pin_number % 4;
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	791b      	ldrb	r3, [r3, #4]
 80005ca:	f003 0303 	and.w	r3, r3, #3
 80005ce:	60fb      	str	r3, [r7, #12]
		uint8_t port_code = get_port_code(pGpio_handle->pGpioX);
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	681b      	ldr	r3, [r3, #0]
 80005d4:	4618      	mov	r0, r3
 80005d6:	f7ff ff1d 	bl	8000414 <get_port_code>
 80005da:	4603      	mov	r3, r0
 80005dc:	72fb      	strb	r3, [r7, #11]
		SYSCFG->EXTICR[syscfgr_exti_reg_no] |= (1u<<(syscfgr_exti_reg_bit_no*4));
 80005de:	4a40      	ldr	r2, [pc, #256]	; (80006e0 <gpio_init+0x228>)
 80005e0:	693b      	ldr	r3, [r7, #16]
 80005e2:	3302      	adds	r3, #2
 80005e4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80005e8:	68fb      	ldr	r3, [r7, #12]
 80005ea:	009b      	lsls	r3, r3, #2
 80005ec:	2101      	movs	r1, #1
 80005ee:	fa01 f303 	lsl.w	r3, r1, r3
 80005f2:	493b      	ldr	r1, [pc, #236]	; (80006e0 <gpio_init+0x228>)
 80005f4:	431a      	orrs	r2, r3
 80005f6:	693b      	ldr	r3, [r7, #16]
 80005f8:	3302      	adds	r3, #2
 80005fa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		//Enable IMR
		EXTI->IMR |= (1u<<pGpio_handle->gPIO_pinConfig.pin_number);
 80005fe:	4b36      	ldr	r3, [pc, #216]	; (80006d8 <gpio_init+0x220>)
 8000600:	681a      	ldr	r2, [r3, #0]
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	791b      	ldrb	r3, [r3, #4]
 8000606:	4619      	mov	r1, r3
 8000608:	2301      	movs	r3, #1
 800060a:	408b      	lsls	r3, r1
 800060c:	4932      	ldr	r1, [pc, #200]	; (80006d8 <gpio_init+0x220>)
 800060e:	4313      	orrs	r3, r2
 8000610:	600b      	str	r3, [r1, #0]
		//NVIC
	}

	//speed ayarla
	temp = (pGpio_handle->gPIO_pinConfig.pin_speed << (2 * pGpio_handle->gPIO_pinConfig.pin_number));
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	799b      	ldrb	r3, [r3, #6]
 8000616:	461a      	mov	r2, r3
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	791b      	ldrb	r3, [r3, #4]
 800061c:	005b      	lsls	r3, r3, #1
 800061e:	fa02 f303 	lsl.w	r3, r2, r3
 8000622:	617b      	str	r3, [r7, #20]
	pGpio_handle->pGpioX->OSPEEDR &= ~(0b11<<(2*pGpio_handle->gPIO_pinConfig.pin_number));
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	689a      	ldr	r2, [r3, #8]
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	791b      	ldrb	r3, [r3, #4]
 800062e:	005b      	lsls	r3, r3, #1
 8000630:	2103      	movs	r1, #3
 8000632:	fa01 f303 	lsl.w	r3, r1, r3
 8000636:	43db      	mvns	r3, r3
 8000638:	4619      	mov	r1, r3
 800063a:	687b      	ldr	r3, [r7, #4]
 800063c:	681b      	ldr	r3, [r3, #0]
 800063e:	400a      	ands	r2, r1
 8000640:	609a      	str	r2, [r3, #8]
	pGpio_handle->pGpioX->OSPEEDR |=temp;
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	6899      	ldr	r1, [r3, #8]
 8000648:	687b      	ldr	r3, [r7, #4]
 800064a:	681b      	ldr	r3, [r3, #0]
 800064c:	697a      	ldr	r2, [r7, #20]
 800064e:	430a      	orrs	r2, r1
 8000650:	609a      	str	r2, [r3, #8]

	//pull up pull down ayarla
	temp = (pGpio_handle->gPIO_pinConfig.pin_pupd << (2 * pGpio_handle->gPIO_pinConfig.pin_number));
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	7a1b      	ldrb	r3, [r3, #8]
 8000656:	461a      	mov	r2, r3
 8000658:	687b      	ldr	r3, [r7, #4]
 800065a:	791b      	ldrb	r3, [r3, #4]
 800065c:	005b      	lsls	r3, r3, #1
 800065e:	fa02 f303 	lsl.w	r3, r2, r3
 8000662:	617b      	str	r3, [r7, #20]
	pGpio_handle->pGpioX->PUPDR &= ~(0b11<<(2*pGpio_handle->gPIO_pinConfig.pin_number));
 8000664:	687b      	ldr	r3, [r7, #4]
 8000666:	681b      	ldr	r3, [r3, #0]
 8000668:	68da      	ldr	r2, [r3, #12]
 800066a:	687b      	ldr	r3, [r7, #4]
 800066c:	791b      	ldrb	r3, [r3, #4]
 800066e:	005b      	lsls	r3, r3, #1
 8000670:	2103      	movs	r1, #3
 8000672:	fa01 f303 	lsl.w	r3, r1, r3
 8000676:	43db      	mvns	r3, r3
 8000678:	4619      	mov	r1, r3
 800067a:	687b      	ldr	r3, [r7, #4]
 800067c:	681b      	ldr	r3, [r3, #0]
 800067e:	400a      	ands	r2, r1
 8000680:	60da      	str	r2, [r3, #12]
	pGpio_handle->pGpioX->PUPDR |=temp;
 8000682:	687b      	ldr	r3, [r7, #4]
 8000684:	681b      	ldr	r3, [r3, #0]
 8000686:	68d9      	ldr	r1, [r3, #12]
 8000688:	687b      	ldr	r3, [r7, #4]
 800068a:	681b      	ldr	r3, [r3, #0]
 800068c:	697a      	ldr	r2, [r7, #20]
 800068e:	430a      	orrs	r2, r1
 8000690:	60da      	str	r2, [r3, #12]

	//otype ayarla
	temp = (pGpio_handle->gPIO_pinConfig.pin_otype << (pGpio_handle->gPIO_pinConfig.pin_number));
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	79db      	ldrb	r3, [r3, #7]
 8000696:	461a      	mov	r2, r3
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	791b      	ldrb	r3, [r3, #4]
 800069c:	fa02 f303 	lsl.w	r3, r2, r3
 80006a0:	617b      	str	r3, [r7, #20]
	pGpio_handle->pGpioX->OTYPER &= ~(0b1<<(pGpio_handle->gPIO_pinConfig.pin_number));
 80006a2:	687b      	ldr	r3, [r7, #4]
 80006a4:	681b      	ldr	r3, [r3, #0]
 80006a6:	685a      	ldr	r2, [r3, #4]
 80006a8:	687b      	ldr	r3, [r7, #4]
 80006aa:	791b      	ldrb	r3, [r3, #4]
 80006ac:	4619      	mov	r1, r3
 80006ae:	2301      	movs	r3, #1
 80006b0:	408b      	lsls	r3, r1
 80006b2:	43db      	mvns	r3, r3
 80006b4:	4619      	mov	r1, r3
 80006b6:	687b      	ldr	r3, [r7, #4]
 80006b8:	681b      	ldr	r3, [r3, #0]
 80006ba:	400a      	ands	r2, r1
 80006bc:	605a      	str	r2, [r3, #4]
	pGpio_handle->pGpioX->OTYPER |=temp;
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	681b      	ldr	r3, [r3, #0]
 80006c2:	6859      	ldr	r1, [r3, #4]
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	681b      	ldr	r3, [r3, #0]
 80006c8:	697a      	ldr	r2, [r7, #20]
 80006ca:	430a      	orrs	r2, r1
 80006cc:	605a      	str	r2, [r3, #4]
	//bi portun pinine 1 mi 0 mı yazacağız....




}
 80006ce:	bf00      	nop
 80006d0:	3718      	adds	r7, #24
 80006d2:	46bd      	mov	sp, r7
 80006d4:	bd80      	pop	{r7, pc}
 80006d6:	bf00      	nop
 80006d8:	40013c00 	.word	0x40013c00
 80006dc:	40023800 	.word	0x40023800
 80006e0:	40013800 	.word	0x40013800

080006e4 <gpio_toggleto_output_pin>:
	pGpiox->ODR=val; //bitsel olarak değil direk data olarak yazıyoruz.

}


void gpio_toggleto_output_pin(GPIO_RegDef_t *pGpiox ,uint8_t pin_no){
 80006e4:	b480      	push	{r7}
 80006e6:	b083      	sub	sp, #12
 80006e8:	af00      	add	r7, sp, #0
 80006ea:	6078      	str	r0, [r7, #4]
 80006ec:	460b      	mov	r3, r1
 80006ee:	70fb      	strb	r3, [r7, #3]
	pGpiox->ODR ^=(1u<<pin_no);
 80006f0:	687b      	ldr	r3, [r7, #4]
 80006f2:	695a      	ldr	r2, [r3, #20]
 80006f4:	78fb      	ldrb	r3, [r7, #3]
 80006f6:	2101      	movs	r1, #1
 80006f8:	fa01 f303 	lsl.w	r3, r1, r3
 80006fc:	405a      	eors	r2, r3
 80006fe:	687b      	ldr	r3, [r7, #4]
 8000700:	615a      	str	r2, [r3, #20]

}
 8000702:	bf00      	nop
 8000704:	370c      	adds	r7, #12
 8000706:	46bd      	mov	sp, r7
 8000708:	f85d 7b04 	ldr.w	r7, [sp], #4
 800070c:	4770      	bx	lr
	...

08000710 <clear_pending_reg>:
	return res!= 0? GPIO_PIN_SET : GPIO_PIN_RESET;
}



void clear_pending_reg(uint8_t pin_no){
 8000710:	b480      	push	{r7}
 8000712:	b083      	sub	sp, #12
 8000714:	af00      	add	r7, sp, #0
 8000716:	4603      	mov	r3, r0
 8000718:	71fb      	strb	r3, [r7, #7]
	//clear PR
	if(EXTI->PR & (1<<pin_no))
 800071a:	4b0c      	ldr	r3, [pc, #48]	; (800074c <clear_pending_reg+0x3c>)
 800071c:	695b      	ldr	r3, [r3, #20]
 800071e:	79fa      	ldrb	r2, [r7, #7]
 8000720:	2101      	movs	r1, #1
 8000722:	fa01 f202 	lsl.w	r2, r1, r2
 8000726:	4013      	ands	r3, r2
 8000728:	2b00      	cmp	r3, #0
 800072a:	d008      	beq.n	800073e <clear_pending_reg+0x2e>
		EXTI->PR |= (1U<<pin_no);
 800072c:	4b07      	ldr	r3, [pc, #28]	; (800074c <clear_pending_reg+0x3c>)
 800072e:	695a      	ldr	r2, [r3, #20]
 8000730:	79fb      	ldrb	r3, [r7, #7]
 8000732:	2101      	movs	r1, #1
 8000734:	fa01 f303 	lsl.w	r3, r1, r3
 8000738:	4904      	ldr	r1, [pc, #16]	; (800074c <clear_pending_reg+0x3c>)
 800073a:	4313      	orrs	r3, r2
 800073c:	614b      	str	r3, [r1, #20]
}
 800073e:	bf00      	nop
 8000740:	370c      	adds	r7, #12
 8000742:	46bd      	mov	sp, r7
 8000744:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000748:	4770      	bx	lr
 800074a:	bf00      	nop
 800074c:	40013c00 	.word	0x40013c00

08000750 <EXTI0_IRQHandler>:
#define BTN_RELEASED 0

uint32_t g_random_number;


void EXTI0_IRQHandler(void){
 8000750:	b580      	push	{r7, lr}
 8000752:	af00      	add	r7, sp, #0
	mini_delay();
 8000754:	f000 f8f0 	bl	8000938 <mini_delay>
	clear_pending_reg(GPIO_PIN_NO_0);
 8000758:	2000      	movs	r0, #0
 800075a:	f7ff ffd9 	bl	8000710 <clear_pending_reg>
	gpio_toggleto_output_pin(GPIOD, GPIO_PIN_NO_15);
 800075e:	210f      	movs	r1, #15
 8000760:	4802      	ldr	r0, [pc, #8]	; (800076c <EXTI0_IRQHandler+0x1c>)
 8000762:	f7ff ffbf 	bl	80006e4 <gpio_toggleto_output_pin>
}
 8000766:	bf00      	nop
 8000768:	bd80      	pop	{r7, pc}
 800076a:	bf00      	nop
 800076c:	40020c00 	.word	0x40020c00

08000770 <SysTick_Handler>:




void SysTick_Handler(){
 8000770:	b580      	push	{r7, lr}
 8000772:	af00      	add	r7, sp, #0
	gpio_toggleto_output_pin(GPIOD, GPIO_PIN_NO_15);
 8000774:	210f      	movs	r1, #15
 8000776:	4802      	ldr	r0, [pc, #8]	; (8000780 <SysTick_Handler+0x10>)
 8000778:	f7ff ffb4 	bl	80006e4 <gpio_toggleto_output_pin>
}
 800077c:	bf00      	nop
 800077e:	bd80      	pop	{r7, pc}
 8000780:	40020c00 	.word	0x40020c00

08000784 <main>:


int main(void)
{
 8000784:	b580      	push	{r7, lr}
 8000786:	b08c      	sub	sp, #48	; 0x30
 8000788:	af00      	add	r7, sp, #0
	user_button.gPIO_pinConfig.pin_mode=GPIO_MODE_FE_IT;
	user_button.gPIO_pinConfig.pin_pupd= GPIO_NO_PUPD;
	gpio_init(&user_button);
	nvic_irqno_enable(IRQ_EXTI0);
**/
	rng_init();
 800078a:	f000 f855 	bl	8000838 <rng_init>

	GPIO_Handle_t Gpio_pd_blue={GPIOD,{GPIO_PIN_NO_15,GPIO_MODE_OUT,GPIO_SPEED_MEDIUM,GPIO_OTYPE_PP,GPIO_NO_PUPD}};
 800078e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000792:	2200      	movs	r2, #0
 8000794:	601a      	str	r2, [r3, #0]
 8000796:	605a      	str	r2, [r3, #4]
 8000798:	609a      	str	r2, [r3, #8]
 800079a:	4b25      	ldr	r3, [pc, #148]	; (8000830 <main+0xac>)
 800079c:	627b      	str	r3, [r7, #36]	; 0x24
 800079e:	230f      	movs	r3, #15
 80007a0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 80007a4:	2301      	movs	r3, #1
 80007a6:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
 80007aa:	2301      	movs	r3, #1
 80007ac:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
	GPIO_Handle_t Gpio_pd_red={GPIOD,{GPIO_PIN_NO_14,GPIO_MODE_OUT,GPIO_SPEED_MEDIUM,GPIO_OTYPE_PP,GPIO_NO_PUPD}};
 80007b0:	f107 0318 	add.w	r3, r7, #24
 80007b4:	2200      	movs	r2, #0
 80007b6:	601a      	str	r2, [r3, #0]
 80007b8:	605a      	str	r2, [r3, #4]
 80007ba:	609a      	str	r2, [r3, #8]
 80007bc:	4b1c      	ldr	r3, [pc, #112]	; (8000830 <main+0xac>)
 80007be:	61bb      	str	r3, [r7, #24]
 80007c0:	230e      	movs	r3, #14
 80007c2:	773b      	strb	r3, [r7, #28]
 80007c4:	2301      	movs	r3, #1
 80007c6:	777b      	strb	r3, [r7, #29]
 80007c8:	2301      	movs	r3, #1
 80007ca:	77bb      	strb	r3, [r7, #30]
	GPIO_Handle_t Gpio_pd_orange={GPIOD,{GPIO_PIN_NO_13,GPIO_MODE_OUT,GPIO_SPEED_MEDIUM,GPIO_OTYPE_PP,GPIO_NO_PUPD}};
 80007cc:	f107 030c 	add.w	r3, r7, #12
 80007d0:	2200      	movs	r2, #0
 80007d2:	601a      	str	r2, [r3, #0]
 80007d4:	605a      	str	r2, [r3, #4]
 80007d6:	609a      	str	r2, [r3, #8]
 80007d8:	4b15      	ldr	r3, [pc, #84]	; (8000830 <main+0xac>)
 80007da:	60fb      	str	r3, [r7, #12]
 80007dc:	230d      	movs	r3, #13
 80007de:	743b      	strb	r3, [r7, #16]
 80007e0:	2301      	movs	r3, #1
 80007e2:	747b      	strb	r3, [r7, #17]
 80007e4:	2301      	movs	r3, #1
 80007e6:	74bb      	strb	r3, [r7, #18]
	GPIO_Handle_t Gpio_pd_green={GPIOD,{GPIO_PIN_NO_12,GPIO_MODE_OUT,GPIO_SPEED_MEDIUM,GPIO_OTYPE_PP,GPIO_NO_PUPD}};
 80007e8:	463b      	mov	r3, r7
 80007ea:	2200      	movs	r2, #0
 80007ec:	601a      	str	r2, [r3, #0]
 80007ee:	605a      	str	r2, [r3, #4]
 80007f0:	609a      	str	r2, [r3, #8]
 80007f2:	4b0f      	ldr	r3, [pc, #60]	; (8000830 <main+0xac>)
 80007f4:	603b      	str	r3, [r7, #0]
 80007f6:	230c      	movs	r3, #12
 80007f8:	713b      	strb	r3, [r7, #4]
 80007fa:	2301      	movs	r3, #1
 80007fc:	717b      	strb	r3, [r7, #5]
 80007fe:	2301      	movs	r3, #1
 8000800:	71bb      	strb	r3, [r7, #6]

	gpio_init(&Gpio_pd_blue);
 8000802:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000806:	4618      	mov	r0, r3
 8000808:	f7ff fe56 	bl	80004b8 <gpio_init>
	gpio_init(&Gpio_pd_green);
 800080c:	463b      	mov	r3, r7
 800080e:	4618      	mov	r0, r3
 8000810:	f7ff fe52 	bl	80004b8 <gpio_init>
	gpio_init(&Gpio_pd_red);
 8000814:	f107 0318 	add.w	r3, r7, #24
 8000818:	4618      	mov	r0, r3
 800081a:	f7ff fe4d 	bl	80004b8 <gpio_init>
	gpio_init(&Gpio_pd_orange);
 800081e:	f107 030c 	add.w	r3, r7, #12
 8000822:	4618      	mov	r0, r3
 8000824:	f7ff fe48 	bl	80004b8 <gpio_init>

	systick_config(SYSTEM_FREQ);
 8000828:	4802      	ldr	r0, [pc, #8]	; (8000834 <main+0xb0>)
 800082a:	f7ff fd4d 	bl	80002c8 <systick_config>

    while(1)
 800082e:	e7fe      	b.n	800082e <main+0xaa>
 8000830:	40020c00 	.word	0x40020c00
 8000834:	00f42400 	.word	0x00f42400

08000838 <rng_init>:
#include "rng.h"




void rng_init(){
 8000838:	b580      	push	{r7, lr}
 800083a:	af00      	add	r7, sp, #0

	//PLL on
	RCC->CR=PLLON;
 800083c:	4b10      	ldr	r3, [pc, #64]	; (8000880 <rng_init+0x48>)
 800083e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8000842:	601a      	str	r2, [r3, #0]
	//PLL ready flag
	while(!(RCC->CR & PLLREADY)); //PLLREADY hazır olana kadar bekle demek bu.
 8000844:	bf00      	nop
 8000846:	4b0e      	ldr	r3, [pc, #56]	; (8000880 <rng_init+0x48>)
 8000848:	681b      	ldr	r3, [r3, #0]
 800084a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800084e:	2b00      	cmp	r3, #0
 8000850:	d0f9      	beq.n	8000846 <rng_init+0xe>

	//clock
	RNG_CLOCK_ENABLE();
 8000852:	4b0b      	ldr	r3, [pc, #44]	; (8000880 <rng_init+0x48>)
 8000854:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000856:	4a0a      	ldr	r2, [pc, #40]	; (8000880 <rng_init+0x48>)
 8000858:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800085c:	6353      	str	r3, [r2, #52]	; 0x34

	//1-enable interrupt
	RNG->CR |= IE;
 800085e:	4b09      	ldr	r3, [pc, #36]	; (8000884 <rng_init+0x4c>)
 8000860:	681b      	ldr	r3, [r3, #0]
 8000862:	4a08      	ldr	r2, [pc, #32]	; (8000884 <rng_init+0x4c>)
 8000864:	f043 0308 	orr.w	r3, r3, #8
 8000868:	6013      	str	r3, [r2, #0]

	//2 Rngen bit in the rng_cr
	RNG->CR |= RNGEN;
 800086a:	4b06      	ldr	r3, [pc, #24]	; (8000884 <rng_init+0x4c>)
 800086c:	681b      	ldr	r3, [r3, #0]
 800086e:	4a05      	ldr	r2, [pc, #20]	; (8000884 <rng_init+0x4c>)
 8000870:	f043 0304 	orr.w	r3, r3, #4
 8000874:	6013      	str	r3, [r2, #0]

	//3 seis ve ceis oku
	nvic_irqno_enable(IRQ_HASH_RNG);
 8000876:	2050      	movs	r0, #80	; 0x50
 8000878:	f7ff fcb6 	bl	80001e8 <nvic_irqno_enable>

}
 800087c:	bf00      	nop
 800087e:	bd80      	pop	{r7, pc}
 8000880:	40023800 	.word	0x40023800
 8000884:	50060800 	.word	0x50060800

08000888 <HASH_RNG_IRQHandler>:


void HASH_RNG_IRQHandler(void){
 8000888:	b580      	push	{r7, lr}
 800088a:	af00      	add	r7, sp, #0
	if(((RNG->SR & RNG_CEIS)==0) && ((RNG->SR & RNG_SEIS)==0) && ((RNG->SR & RNG_DRDY)==1))
 800088c:	4b28      	ldr	r3, [pc, #160]	; (8000930 <HASH_RNG_IRQHandler+0xa8>)
 800088e:	685b      	ldr	r3, [r3, #4]
 8000890:	f003 0320 	and.w	r3, r3, #32
 8000894:	2b00      	cmp	r3, #0
 8000896:	d11b      	bne.n	80008d0 <HASH_RNG_IRQHandler+0x48>
 8000898:	4b25      	ldr	r3, [pc, #148]	; (8000930 <HASH_RNG_IRQHandler+0xa8>)
 800089a:	685b      	ldr	r3, [r3, #4]
 800089c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80008a0:	2b00      	cmp	r3, #0
 80008a2:	d115      	bne.n	80008d0 <HASH_RNG_IRQHandler+0x48>
 80008a4:	4b22      	ldr	r3, [pc, #136]	; (8000930 <HASH_RNG_IRQHandler+0xa8>)
 80008a6:	685b      	ldr	r3, [r3, #4]
 80008a8:	f003 0301 	and.w	r3, r3, #1
 80008ac:	2b01      	cmp	r3, #1
 80008ae:	d10f      	bne.n	80008d0 <HASH_RNG_IRQHandler+0x48>
	{
		//g_random_number = RNG->DR;
		RNG->CR &= ~IE;
 80008b0:	4b1f      	ldr	r3, [pc, #124]	; (8000930 <HASH_RNG_IRQHandler+0xa8>)
 80008b2:	681b      	ldr	r3, [r3, #0]
 80008b4:	4a1e      	ldr	r2, [pc, #120]	; (8000930 <HASH_RNG_IRQHandler+0xa8>)
 80008b6:	f023 0308 	bic.w	r3, r3, #8
 80008ba:	6013      	str	r3, [r2, #0]
		RNG->CR &= ~RNGEN;
 80008bc:	4b1c      	ldr	r3, [pc, #112]	; (8000930 <HASH_RNG_IRQHandler+0xa8>)
 80008be:	681b      	ldr	r3, [r3, #0]
 80008c0:	4a1b      	ldr	r2, [pc, #108]	; (8000930 <HASH_RNG_IRQHandler+0xa8>)
 80008c2:	f023 0304 	bic.w	r3, r3, #4
 80008c6:	6013      	str	r3, [r2, #0]
		nvic_irqno_disable(IRQ_HASH_RNG);
 80008c8:	2050      	movs	r0, #80	; 0x50
 80008ca:	f7ff fcc5 	bl	8000258 <nvic_irqno_disable>
 80008ce:	e02d      	b.n	800092c <HASH_RNG_IRQHandler+0xa4>
	}else {//hatalı durum düzeltme

		if((RNG->SR & RNG_CEIS)==1){
 80008d0:	4b17      	ldr	r3, [pc, #92]	; (8000930 <HASH_RNG_IRQHandler+0xa8>)
 80008d2:	685b      	ldr	r3, [r3, #4]
 80008d4:	f003 0320 	and.w	r3, r3, #32
 80008d8:	2b01      	cmp	r3, #1
 80008da:	d105      	bne.n	80008e8 <HASH_RNG_IRQHandler+0x60>
			RNG->CR &= ~RNG_CEIS;
 80008dc:	4b14      	ldr	r3, [pc, #80]	; (8000930 <HASH_RNG_IRQHandler+0xa8>)
 80008de:	681b      	ldr	r3, [r3, #0]
 80008e0:	4a13      	ldr	r2, [pc, #76]	; (8000930 <HASH_RNG_IRQHandler+0xa8>)
 80008e2:	f023 0320 	bic.w	r3, r3, #32
 80008e6:	6013      	str	r3, [r2, #0]
		}
		if((RNG->SR & RNG_SEIS)==1){
 80008e8:	4b11      	ldr	r3, [pc, #68]	; (8000930 <HASH_RNG_IRQHandler+0xa8>)
 80008ea:	685b      	ldr	r3, [r3, #4]
 80008ec:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80008f0:	2b01      	cmp	r3, #1
 80008f2:	d105      	bne.n	8000900 <HASH_RNG_IRQHandler+0x78>
			RNG->CR &= ~RNG_SEIS;
 80008f4:	4b0e      	ldr	r3, [pc, #56]	; (8000930 <HASH_RNG_IRQHandler+0xa8>)
 80008f6:	681b      	ldr	r3, [r3, #0]
 80008f8:	4a0d      	ldr	r2, [pc, #52]	; (8000930 <HASH_RNG_IRQHandler+0xa8>)
 80008fa:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80008fe:	6013      	str	r3, [r2, #0]
		}
		//resetle ve yeniden başlat
		RCC->AHB2STR = RNGRST;//resetleme ayarı ama bi alttaki satırdaki gibi tekrar açmazsan kapalı kalır.
 8000900:	4b0c      	ldr	r3, [pc, #48]	; (8000934 <HASH_RNG_IRQHandler+0xac>)
 8000902:	2240      	movs	r2, #64	; 0x40
 8000904:	615a      	str	r2, [r3, #20]
		RCC->AHB2STR &= ~RNGRST;
 8000906:	4b0b      	ldr	r3, [pc, #44]	; (8000934 <HASH_RNG_IRQHandler+0xac>)
 8000908:	695b      	ldr	r3, [r3, #20]
 800090a:	4a0a      	ldr	r2, [pc, #40]	; (8000934 <HASH_RNG_IRQHandler+0xac>)
 800090c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000910:	6153      	str	r3, [r2, #20]
		RNG->CR |= RNGEN;
 8000912:	4b07      	ldr	r3, [pc, #28]	; (8000930 <HASH_RNG_IRQHandler+0xa8>)
 8000914:	681b      	ldr	r3, [r3, #0]
 8000916:	4a06      	ldr	r2, [pc, #24]	; (8000930 <HASH_RNG_IRQHandler+0xa8>)
 8000918:	f043 0304 	orr.w	r3, r3, #4
 800091c:	6013      	str	r3, [r2, #0]
		RNG->CR |= IE;
 800091e:	4b04      	ldr	r3, [pc, #16]	; (8000930 <HASH_RNG_IRQHandler+0xa8>)
 8000920:	681b      	ldr	r3, [r3, #0]
 8000922:	4a03      	ldr	r2, [pc, #12]	; (8000930 <HASH_RNG_IRQHandler+0xa8>)
 8000924:	f043 0308 	orr.w	r3, r3, #8
 8000928:	6013      	str	r3, [r2, #0]
	}




}
 800092a:	bf00      	nop
 800092c:	bf00      	nop
 800092e:	bd80      	pop	{r7, pc}
 8000930:	50060800 	.word	0x50060800
 8000934:	40023800 	.word	0x40023800

08000938 <mini_delay>:
void delay(){
	for(int i=0;i<1000000;++i)
		;
}

void mini_delay(){
 8000938:	b480      	push	{r7}
 800093a:	b083      	sub	sp, #12
 800093c:	af00      	add	r7, sp, #0
	for(int i=0;i<100000;++i)
 800093e:	2300      	movs	r3, #0
 8000940:	607b      	str	r3, [r7, #4]
 8000942:	e002      	b.n	800094a <mini_delay+0x12>
 8000944:	687b      	ldr	r3, [r7, #4]
 8000946:	3301      	adds	r3, #1
 8000948:	607b      	str	r3, [r7, #4]
 800094a:	687b      	ldr	r3, [r7, #4]
 800094c:	4a04      	ldr	r2, [pc, #16]	; (8000960 <mini_delay+0x28>)
 800094e:	4293      	cmp	r3, r2
 8000950:	ddf8      	ble.n	8000944 <mini_delay+0xc>
		;
}
 8000952:	bf00      	nop
 8000954:	bf00      	nop
 8000956:	370c      	adds	r7, #12
 8000958:	46bd      	mov	sp, r7
 800095a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800095e:	4770      	bx	lr
 8000960:	0001869f 	.word	0x0001869f

08000964 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000964:	480d      	ldr	r0, [pc, #52]	; (800099c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000966:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000968:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800096c:	480c      	ldr	r0, [pc, #48]	; (80009a0 <LoopForever+0x6>)
  ldr r1, =_edata
 800096e:	490d      	ldr	r1, [pc, #52]	; (80009a4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000970:	4a0d      	ldr	r2, [pc, #52]	; (80009a8 <LoopForever+0xe>)
  movs r3, #0
 8000972:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000974:	e002      	b.n	800097c <LoopCopyDataInit>

08000976 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000976:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000978:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800097a:	3304      	adds	r3, #4

0800097c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800097c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800097e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000980:	d3f9      	bcc.n	8000976 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000982:	4a0a      	ldr	r2, [pc, #40]	; (80009ac <LoopForever+0x12>)
  ldr r4, =_ebss
 8000984:	4c0a      	ldr	r4, [pc, #40]	; (80009b0 <LoopForever+0x16>)
  movs r3, #0
 8000986:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000988:	e001      	b.n	800098e <LoopFillZerobss>

0800098a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800098a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800098c:	3204      	adds	r2, #4

0800098e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800098e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000990:	d3fb      	bcc.n	800098a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000992:	f000 f811 	bl	80009b8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000996:	f7ff fef5 	bl	8000784 <main>

0800099a <LoopForever>:

LoopForever:
    b LoopForever
 800099a:	e7fe      	b.n	800099a <LoopForever>
  ldr   r0, =_estack
 800099c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80009a0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80009a4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80009a8:	08000a20 	.word	0x08000a20
  ldr r2, =_sbss
 80009ac:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80009b0:	2000001c 	.word	0x2000001c

080009b4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80009b4:	e7fe      	b.n	80009b4 <ADC_IRQHandler>
	...

080009b8 <__libc_init_array>:
 80009b8:	b570      	push	{r4, r5, r6, lr}
 80009ba:	4d0d      	ldr	r5, [pc, #52]	; (80009f0 <__libc_init_array+0x38>)
 80009bc:	4c0d      	ldr	r4, [pc, #52]	; (80009f4 <__libc_init_array+0x3c>)
 80009be:	1b64      	subs	r4, r4, r5
 80009c0:	10a4      	asrs	r4, r4, #2
 80009c2:	2600      	movs	r6, #0
 80009c4:	42a6      	cmp	r6, r4
 80009c6:	d109      	bne.n	80009dc <__libc_init_array+0x24>
 80009c8:	4d0b      	ldr	r5, [pc, #44]	; (80009f8 <__libc_init_array+0x40>)
 80009ca:	4c0c      	ldr	r4, [pc, #48]	; (80009fc <__libc_init_array+0x44>)
 80009cc:	f000 f818 	bl	8000a00 <_init>
 80009d0:	1b64      	subs	r4, r4, r5
 80009d2:	10a4      	asrs	r4, r4, #2
 80009d4:	2600      	movs	r6, #0
 80009d6:	42a6      	cmp	r6, r4
 80009d8:	d105      	bne.n	80009e6 <__libc_init_array+0x2e>
 80009da:	bd70      	pop	{r4, r5, r6, pc}
 80009dc:	f855 3b04 	ldr.w	r3, [r5], #4
 80009e0:	4798      	blx	r3
 80009e2:	3601      	adds	r6, #1
 80009e4:	e7ee      	b.n	80009c4 <__libc_init_array+0xc>
 80009e6:	f855 3b04 	ldr.w	r3, [r5], #4
 80009ea:	4798      	blx	r3
 80009ec:	3601      	adds	r6, #1
 80009ee:	e7f2      	b.n	80009d6 <__libc_init_array+0x1e>
 80009f0:	08000a18 	.word	0x08000a18
 80009f4:	08000a18 	.word	0x08000a18
 80009f8:	08000a18 	.word	0x08000a18
 80009fc:	08000a1c 	.word	0x08000a1c

08000a00 <_init>:
 8000a00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a02:	bf00      	nop
 8000a04:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a06:	bc08      	pop	{r3}
 8000a08:	469e      	mov	lr, r3
 8000a0a:	4770      	bx	lr

08000a0c <_fini>:
 8000a0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a0e:	bf00      	nop
 8000a10:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a12:	bc08      	pop	{r3}
 8000a14:	469e      	mov	lr, r3
 8000a16:	4770      	bx	lr
