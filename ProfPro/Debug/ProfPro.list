
ProfPro.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000008a4  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a4c  08000a54  00010a54  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a4c  08000a4c  00010a54  2**0
                  CONTENTS
  4 .ARM          00000000  08000a4c  08000a4c  00010a54  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a4c  08000a54  00010a54  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a4c  08000a4c  00010a4c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000a50  08000a50  00010a50  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010a54  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010a54  2**0
                  CONTENTS
 10 .bss          0000002c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000002c  2000002c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010a54  2**0
                  CONTENTS, READONLY
 13 .debug_info   00001239  00000000  00000000  00010a84  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000005a6  00000000  00000000  00011cbd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000150  00000000  00000000  00012268  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000f8  00000000  00000000  000123b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001495  00000000  00000000  000124b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001497  00000000  00000000  00013945  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000056df  00000000  00000000  00014ddc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0001a4bb  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000398  00000000  00000000  0001a50c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000a34 	.word	0x08000a34

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000a34 	.word	0x08000a34

080001e8 <nvic_irqno_disable>:
	else if(irq_num <= 81)
		NVIC_ISERx->NVIC_ISER2 |= (1U<<(irq_num%32));

}

void nvic_irqno_disable(uint8_t irq_num){
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	4603      	mov	r3, r0
 80001f0:	71fb      	strb	r3, [r7, #7]
	if(irq_num < 32)
 80001f2:	79fb      	ldrb	r3, [r7, #7]
 80001f4:	2b1f      	cmp	r3, #31
 80001f6:	d809      	bhi.n	800020c <nvic_irqno_disable+0x24>
		NVIC_ICERx->NVIC_ICER0 |= ((1U<<irq_num ));
 80001f8:	4b16      	ldr	r3, [pc, #88]	; (8000254 <nvic_irqno_disable+0x6c>)
 80001fa:	681a      	ldr	r2, [r3, #0]
 80001fc:	79fb      	ldrb	r3, [r7, #7]
 80001fe:	2101      	movs	r1, #1
 8000200:	fa01 f303 	lsl.w	r3, r1, r3
 8000204:	4913      	ldr	r1, [pc, #76]	; (8000254 <nvic_irqno_disable+0x6c>)
 8000206:	4313      	orrs	r3, r2
 8000208:	600b      	str	r3, [r1, #0]
	else if( irq_num < 64)
		NVIC_ICERx->NVIC_ICER1 |= (1U<<(irq_num%32));
	else if(irq_num <= 81)
		NVIC_ICERx->NVIC_ICER2 |= (1U<<(irq_num%32));
}
 800020a:	e01c      	b.n	8000246 <nvic_irqno_disable+0x5e>
	else if( irq_num < 64)
 800020c:	79fb      	ldrb	r3, [r7, #7]
 800020e:	2b3f      	cmp	r3, #63	; 0x3f
 8000210:	d80b      	bhi.n	800022a <nvic_irqno_disable+0x42>
		NVIC_ICERx->NVIC_ICER1 |= (1U<<(irq_num%32));
 8000212:	4b10      	ldr	r3, [pc, #64]	; (8000254 <nvic_irqno_disable+0x6c>)
 8000214:	685a      	ldr	r2, [r3, #4]
 8000216:	79fb      	ldrb	r3, [r7, #7]
 8000218:	f003 031f 	and.w	r3, r3, #31
 800021c:	2101      	movs	r1, #1
 800021e:	fa01 f303 	lsl.w	r3, r1, r3
 8000222:	490c      	ldr	r1, [pc, #48]	; (8000254 <nvic_irqno_disable+0x6c>)
 8000224:	4313      	orrs	r3, r2
 8000226:	604b      	str	r3, [r1, #4]
}
 8000228:	e00d      	b.n	8000246 <nvic_irqno_disable+0x5e>
	else if(irq_num <= 81)
 800022a:	79fb      	ldrb	r3, [r7, #7]
 800022c:	2b51      	cmp	r3, #81	; 0x51
 800022e:	d80a      	bhi.n	8000246 <nvic_irqno_disable+0x5e>
		NVIC_ICERx->NVIC_ICER2 |= (1U<<(irq_num%32));
 8000230:	4b08      	ldr	r3, [pc, #32]	; (8000254 <nvic_irqno_disable+0x6c>)
 8000232:	689a      	ldr	r2, [r3, #8]
 8000234:	79fb      	ldrb	r3, [r7, #7]
 8000236:	f003 031f 	and.w	r3, r3, #31
 800023a:	2101      	movs	r1, #1
 800023c:	fa01 f303 	lsl.w	r3, r1, r3
 8000240:	4904      	ldr	r1, [pc, #16]	; (8000254 <nvic_irqno_disable+0x6c>)
 8000242:	4313      	orrs	r3, r2
 8000244:	608b      	str	r3, [r1, #8]
}
 8000246:	bf00      	nop
 8000248:	370c      	adds	r7, #12
 800024a:	46bd      	mov	sp, r7
 800024c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000250:	4770      	bx	lr
 8000252:	bf00      	nop
 8000254:	e000e180 	.word	0xe000e180

08000258 <systick_config>:



void systick_config(uint32_t tick){
 8000258:	b480      	push	{r7}
 800025a:	b083      	sub	sp, #12
 800025c:	af00      	add	r7, sp, #0
 800025e:	6078      	str	r0, [r7, #4]
	//1-Program reload value
	//2-Clear current value
	//3-Program Control and Status register

	SYSTIC->SYST_RVR= tick -1;
 8000260:	4a0f      	ldr	r2, [pc, #60]	; (80002a0 <systick_config+0x48>)
 8000262:	687b      	ldr	r3, [r7, #4]
 8000264:	3b01      	subs	r3, #1
 8000266:	6053      	str	r3, [r2, #4]
	SYSTIC->SYST_CVR= 0;
 8000268:	4b0d      	ldr	r3, [pc, #52]	; (80002a0 <systick_config+0x48>)
 800026a:	2200      	movs	r2, #0
 800026c:	609a      	str	r2, [r3, #8]
	SYSTIC->SYST_CSR |= (1U<<2);
 800026e:	4b0c      	ldr	r3, [pc, #48]	; (80002a0 <systick_config+0x48>)
 8000270:	681b      	ldr	r3, [r3, #0]
 8000272:	4a0b      	ldr	r2, [pc, #44]	; (80002a0 <systick_config+0x48>)
 8000274:	f043 0304 	orr.w	r3, r3, #4
 8000278:	6013      	str	r3, [r2, #0]
	SYSTIC->SYST_CSR |= (1U<<1);
 800027a:	4b09      	ldr	r3, [pc, #36]	; (80002a0 <systick_config+0x48>)
 800027c:	681b      	ldr	r3, [r3, #0]
 800027e:	4a08      	ldr	r2, [pc, #32]	; (80002a0 <systick_config+0x48>)
 8000280:	f043 0302 	orr.w	r3, r3, #2
 8000284:	6013      	str	r3, [r2, #0]
	SYSTIC->SYST_CSR |= (1U<<0); //COUNTER ENABLE
 8000286:	4b06      	ldr	r3, [pc, #24]	; (80002a0 <systick_config+0x48>)
 8000288:	681b      	ldr	r3, [r3, #0]
 800028a:	4a05      	ldr	r2, [pc, #20]	; (80002a0 <systick_config+0x48>)
 800028c:	f043 0301 	orr.w	r3, r3, #1
 8000290:	6013      	str	r3, [r2, #0]

}
 8000292:	bf00      	nop
 8000294:	370c      	adds	r7, #12
 8000296:	46bd      	mov	sp, r7
 8000298:	f85d 7b04 	ldr.w	r7, [sp], #4
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop
 80002a0:	e000e010 	.word	0xe000e010

080002a4 <SysTick_Handler>:

void SysTick_Handler(){
 80002a4:	b480      	push	{r7}
 80002a6:	af00      	add	r7, sp, #0
	//gpio_toggleto_output_pin(GPIOD, GPIO_PIN_NO_15);
	++tmTickCount;
 80002a8:	4b04      	ldr	r3, [pc, #16]	; (80002bc <SysTick_Handler+0x18>)
 80002aa:	681b      	ldr	r3, [r3, #0]
 80002ac:	3301      	adds	r3, #1
 80002ae:	4a03      	ldr	r2, [pc, #12]	; (80002bc <SysTick_Handler+0x18>)
 80002b0:	6013      	str	r3, [r2, #0]
}
 80002b2:	bf00      	nop
 80002b4:	46bd      	mov	sp, r7
 80002b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ba:	4770      	bx	lr
 80002bc:	2000001c 	.word	0x2000001c

080002c0 <clock>:



clock_t clock(){
 80002c0:	b480      	push	{r7}
 80002c2:	af00      	add	r7, sp, #0
	tmTickCount;
 80002c4:	4b03      	ldr	r3, [pc, #12]	; (80002d4 <clock+0x14>)
 80002c6:	681b      	ldr	r3, [r3, #0]
}
 80002c8:	bf00      	nop
 80002ca:	4618      	mov	r0, r3
 80002cc:	46bd      	mov	sp, r7
 80002ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002d2:	4770      	bx	lr
 80002d4:	2000001c 	.word	0x2000001c

080002d8 <gpio_perip_en>:
 */
#include "gpio.h"



PRIVATE void gpio_perip_en(GPIO_RegDef_t * pGpiox){
 80002d8:	b480      	push	{r7}
 80002da:	b083      	sub	sp, #12
 80002dc:	af00      	add	r7, sp, #0
 80002de:	6078      	str	r0, [r7, #4]
	if(pGpiox==GPIOA)
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	4a33      	ldr	r2, [pc, #204]	; (80003b0 <gpio_perip_en+0xd8>)
 80002e4:	4293      	cmp	r3, r2
 80002e6:	d106      	bne.n	80002f6 <gpio_perip_en+0x1e>
		GPIOA_CLOCK_ENABLE();
 80002e8:	4b32      	ldr	r3, [pc, #200]	; (80003b4 <gpio_perip_en+0xdc>)
 80002ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ec:	4a31      	ldr	r2, [pc, #196]	; (80003b4 <gpio_perip_en+0xdc>)
 80002ee:	f043 0301 	orr.w	r3, r3, #1
 80002f2:	6313      	str	r3, [r2, #48]	; 0x30
		GPIOG_CLOCK_ENABLE();
	else if(pGpiox==GPIOH)
		GPIOH_CLOCK_ENABLE();
	else if(pGpiox==GPIOI)
		GPIOI_CLOCK_ENABLE();
}
 80002f4:	e056      	b.n	80003a4 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOB)
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	4a2f      	ldr	r2, [pc, #188]	; (80003b8 <gpio_perip_en+0xe0>)
 80002fa:	4293      	cmp	r3, r2
 80002fc:	d106      	bne.n	800030c <gpio_perip_en+0x34>
		GPIOB_CLOCK_ENABLE();
 80002fe:	4b2d      	ldr	r3, [pc, #180]	; (80003b4 <gpio_perip_en+0xdc>)
 8000300:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000302:	4a2c      	ldr	r2, [pc, #176]	; (80003b4 <gpio_perip_en+0xdc>)
 8000304:	f043 0302 	orr.w	r3, r3, #2
 8000308:	6313      	str	r3, [r2, #48]	; 0x30
}
 800030a:	e04b      	b.n	80003a4 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOC)
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	4a2b      	ldr	r2, [pc, #172]	; (80003bc <gpio_perip_en+0xe4>)
 8000310:	4293      	cmp	r3, r2
 8000312:	d106      	bne.n	8000322 <gpio_perip_en+0x4a>
		GPIOC_CLOCK_ENABLE();
 8000314:	4b27      	ldr	r3, [pc, #156]	; (80003b4 <gpio_perip_en+0xdc>)
 8000316:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000318:	4a26      	ldr	r2, [pc, #152]	; (80003b4 <gpio_perip_en+0xdc>)
 800031a:	f043 0304 	orr.w	r3, r3, #4
 800031e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000320:	e040      	b.n	80003a4 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOD)
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	4a26      	ldr	r2, [pc, #152]	; (80003c0 <gpio_perip_en+0xe8>)
 8000326:	4293      	cmp	r3, r2
 8000328:	d106      	bne.n	8000338 <gpio_perip_en+0x60>
		GPIOD_CLOCK_ENABLE();
 800032a:	4b22      	ldr	r3, [pc, #136]	; (80003b4 <gpio_perip_en+0xdc>)
 800032c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032e:	4a21      	ldr	r2, [pc, #132]	; (80003b4 <gpio_perip_en+0xdc>)
 8000330:	f043 0308 	orr.w	r3, r3, #8
 8000334:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000336:	e035      	b.n	80003a4 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOE)
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	4a22      	ldr	r2, [pc, #136]	; (80003c4 <gpio_perip_en+0xec>)
 800033c:	4293      	cmp	r3, r2
 800033e:	d106      	bne.n	800034e <gpio_perip_en+0x76>
		GPIOE_CLOCK_ENABLE();
 8000340:	4b1c      	ldr	r3, [pc, #112]	; (80003b4 <gpio_perip_en+0xdc>)
 8000342:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000344:	4a1b      	ldr	r2, [pc, #108]	; (80003b4 <gpio_perip_en+0xdc>)
 8000346:	f043 0310 	orr.w	r3, r3, #16
 800034a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034c:	e02a      	b.n	80003a4 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOF)
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	4a1d      	ldr	r2, [pc, #116]	; (80003c8 <gpio_perip_en+0xf0>)
 8000352:	4293      	cmp	r3, r2
 8000354:	d106      	bne.n	8000364 <gpio_perip_en+0x8c>
		GPIOF_CLOCK_ENABLE();
 8000356:	4b17      	ldr	r3, [pc, #92]	; (80003b4 <gpio_perip_en+0xdc>)
 8000358:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035a:	4a16      	ldr	r2, [pc, #88]	; (80003b4 <gpio_perip_en+0xdc>)
 800035c:	f043 0320 	orr.w	r3, r3, #32
 8000360:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000362:	e01f      	b.n	80003a4 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOG)
 8000364:	687b      	ldr	r3, [r7, #4]
 8000366:	4a19      	ldr	r2, [pc, #100]	; (80003cc <gpio_perip_en+0xf4>)
 8000368:	4293      	cmp	r3, r2
 800036a:	d106      	bne.n	800037a <gpio_perip_en+0xa2>
		GPIOG_CLOCK_ENABLE();
 800036c:	4b11      	ldr	r3, [pc, #68]	; (80003b4 <gpio_perip_en+0xdc>)
 800036e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000370:	4a10      	ldr	r2, [pc, #64]	; (80003b4 <gpio_perip_en+0xdc>)
 8000372:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000376:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000378:	e014      	b.n	80003a4 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOH)
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	4a14      	ldr	r2, [pc, #80]	; (80003d0 <gpio_perip_en+0xf8>)
 800037e:	4293      	cmp	r3, r2
 8000380:	d106      	bne.n	8000390 <gpio_perip_en+0xb8>
		GPIOH_CLOCK_ENABLE();
 8000382:	4b0c      	ldr	r3, [pc, #48]	; (80003b4 <gpio_perip_en+0xdc>)
 8000384:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000386:	4a0b      	ldr	r2, [pc, #44]	; (80003b4 <gpio_perip_en+0xdc>)
 8000388:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800038c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800038e:	e009      	b.n	80003a4 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOI)
 8000390:	687b      	ldr	r3, [r7, #4]
 8000392:	4a10      	ldr	r2, [pc, #64]	; (80003d4 <gpio_perip_en+0xfc>)
 8000394:	4293      	cmp	r3, r2
 8000396:	d105      	bne.n	80003a4 <gpio_perip_en+0xcc>
		GPIOI_CLOCK_ENABLE();
 8000398:	4b06      	ldr	r3, [pc, #24]	; (80003b4 <gpio_perip_en+0xdc>)
 800039a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800039c:	4a05      	ldr	r2, [pc, #20]	; (80003b4 <gpio_perip_en+0xdc>)
 800039e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80003a2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a4:	bf00      	nop
 80003a6:	370c      	adds	r7, #12
 80003a8:	46bd      	mov	sp, r7
 80003aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ae:	4770      	bx	lr
 80003b0:	40020000 	.word	0x40020000
 80003b4:	40023800 	.word	0x40023800
 80003b8:	40020400 	.word	0x40020400
 80003bc:	40020800 	.word	0x40020800
 80003c0:	40020c00 	.word	0x40020c00
 80003c4:	40021000 	.word	0x40021000
 80003c8:	40021400 	.word	0x40021400
 80003cc:	40021800 	.word	0x40021800
 80003d0:	40021c00 	.word	0x40021c00
 80003d4:	40022000 	.word	0x40022000

080003d8 <get_port_code>:


PRIVATE uint8_t get_port_code(const GPIO_RegDef_t * pGpioX){
 80003d8:	b480      	push	{r7}
 80003da:	b083      	sub	sp, #12
 80003dc:	af00      	add	r7, sp, #0
 80003de:	6078      	str	r0, [r7, #4]
	if(pGpioX==GPIOA)
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	4a1d      	ldr	r2, [pc, #116]	; (8000458 <get_port_code+0x80>)
 80003e4:	4293      	cmp	r3, r2
 80003e6:	d101      	bne.n	80003ec <get_port_code+0x14>
		return GPIOA_PORT_CODE;
 80003e8:	2300      	movs	r3, #0
 80003ea:	e02f      	b.n	800044c <get_port_code+0x74>
	else if(pGpioX==GPIOB)
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	4a1b      	ldr	r2, [pc, #108]	; (800045c <get_port_code+0x84>)
 80003f0:	4293      	cmp	r3, r2
 80003f2:	d101      	bne.n	80003f8 <get_port_code+0x20>
		return GPIOB_PORT_CODE;
 80003f4:	2301      	movs	r3, #1
 80003f6:	e029      	b.n	800044c <get_port_code+0x74>
	else if(pGpioX==GPIOC)
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	4a19      	ldr	r2, [pc, #100]	; (8000460 <get_port_code+0x88>)
 80003fc:	4293      	cmp	r3, r2
 80003fe:	d101      	bne.n	8000404 <get_port_code+0x2c>
		return GPIOC_PORT_CODE;
 8000400:	2302      	movs	r3, #2
 8000402:	e023      	b.n	800044c <get_port_code+0x74>
	else if(pGpioX==GPIOD)
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	4a17      	ldr	r2, [pc, #92]	; (8000464 <get_port_code+0x8c>)
 8000408:	4293      	cmp	r3, r2
 800040a:	d101      	bne.n	8000410 <get_port_code+0x38>
		return GPIOD_PORT_CODE;
 800040c:	2303      	movs	r3, #3
 800040e:	e01d      	b.n	800044c <get_port_code+0x74>
	else if(pGpioX==GPIOE)
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	4a15      	ldr	r2, [pc, #84]	; (8000468 <get_port_code+0x90>)
 8000414:	4293      	cmp	r3, r2
 8000416:	d101      	bne.n	800041c <get_port_code+0x44>
		return GPIOE_PORT_CODE;
 8000418:	2304      	movs	r3, #4
 800041a:	e017      	b.n	800044c <get_port_code+0x74>
	else if(pGpioX==GPIOF)
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	4a13      	ldr	r2, [pc, #76]	; (800046c <get_port_code+0x94>)
 8000420:	4293      	cmp	r3, r2
 8000422:	d101      	bne.n	8000428 <get_port_code+0x50>
		return GPIOF_PORT_CODE;
 8000424:	2305      	movs	r3, #5
 8000426:	e011      	b.n	800044c <get_port_code+0x74>
	else if(pGpioX==GPIOG)
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	4a11      	ldr	r2, [pc, #68]	; (8000470 <get_port_code+0x98>)
 800042c:	4293      	cmp	r3, r2
 800042e:	d101      	bne.n	8000434 <get_port_code+0x5c>
		return GPIOG_PORT_CODE;
 8000430:	2306      	movs	r3, #6
 8000432:	e00b      	b.n	800044c <get_port_code+0x74>
	else if(pGpioX==GPIOH)
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	4a0f      	ldr	r2, [pc, #60]	; (8000474 <get_port_code+0x9c>)
 8000438:	4293      	cmp	r3, r2
 800043a:	d101      	bne.n	8000440 <get_port_code+0x68>
		return GPIOH_PORT_CODE;
 800043c:	2307      	movs	r3, #7
 800043e:	e005      	b.n	800044c <get_port_code+0x74>
	else if(pGpioX==GPIOI)
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	4a0d      	ldr	r2, [pc, #52]	; (8000478 <get_port_code+0xa0>)
 8000444:	4293      	cmp	r3, r2
 8000446:	d101      	bne.n	800044c <get_port_code+0x74>
		return GPIOI_PORT_CODE;
 8000448:	2308      	movs	r3, #8
 800044a:	e7ff      	b.n	800044c <get_port_code+0x74>
}
 800044c:	4618      	mov	r0, r3
 800044e:	370c      	adds	r7, #12
 8000450:	46bd      	mov	sp, r7
 8000452:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000456:	4770      	bx	lr
 8000458:	40020000 	.word	0x40020000
 800045c:	40020400 	.word	0x40020400
 8000460:	40020800 	.word	0x40020800
 8000464:	40020c00 	.word	0x40020c00
 8000468:	40021000 	.word	0x40021000
 800046c:	40021400 	.word	0x40021400
 8000470:	40021800 	.word	0x40021800
 8000474:	40021c00 	.word	0x40021c00
 8000478:	40022000 	.word	0x40022000

0800047c <gpio_init>:

void gpio_init(GPIO_Handle_t * pGpio_handle){
 800047c:	b580      	push	{r7, lr}
 800047e:	b086      	sub	sp, #24
 8000480:	af00      	add	r7, sp, #0
 8000482:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 8000484:	2300      	movs	r3, #0
 8000486:	617b      	str	r3, [r7, #20]

	//clock aktif et
	gpio_perip_en(pGpio_handle->pGpioX);
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	4618      	mov	r0, r3
 800048e:	f7ff ff23 	bl	80002d8 <gpio_perip_en>
	volatile uint32_t * p_rcc_ahb1_reg=(uint32_t*)(0x40023800+0x30);
	*p_rcc_ahb1_reg |=(1u<<3);
*/

	//pin mode ayarla
	if(pGpio_handle->gPIO_pinConfig.pin_mode<=GPIO_MODE_ANALOG){
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	795b      	ldrb	r3, [r3, #5]
 8000496:	2b03      	cmp	r3, #3
 8000498:	d820      	bhi.n	80004dc <gpio_init+0x60>
		temp = (pGpio_handle->gPIO_pinConfig.pin_mode << (2 * pGpio_handle->gPIO_pinConfig.pin_number));
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	795b      	ldrb	r3, [r3, #5]
 800049e:	461a      	mov	r2, r3
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	791b      	ldrb	r3, [r3, #4]
 80004a4:	005b      	lsls	r3, r3, #1
 80004a6:	fa02 f303 	lsl.w	r3, r2, r3
 80004aa:	617b      	str	r3, [r7, #20]
		pGpio_handle->pGpioX->MODER &= ~(0b11<<(2*pGpio_handle->gPIO_pinConfig.pin_number));
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	681b      	ldr	r3, [r3, #0]
 80004b0:	681a      	ldr	r2, [r3, #0]
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	791b      	ldrb	r3, [r3, #4]
 80004b6:	005b      	lsls	r3, r3, #1
 80004b8:	2103      	movs	r1, #3
 80004ba:	fa01 f303 	lsl.w	r3, r1, r3
 80004be:	43db      	mvns	r3, r3
 80004c0:	4619      	mov	r1, r3
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	681b      	ldr	r3, [r3, #0]
 80004c6:	400a      	ands	r2, r1
 80004c8:	601a      	str	r2, [r3, #0]
		pGpio_handle->pGpioX->MODER |=temp;
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	681b      	ldr	r3, [r3, #0]
 80004ce:	6819      	ldr	r1, [r3, #0]
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	697a      	ldr	r2, [r7, #20]
 80004d6:	430a      	orrs	r2, r1
 80004d8:	601a      	str	r2, [r3, #0]
 80004da:	e07c      	b.n	80005d6 <gpio_init+0x15a>
	}else{
		//interrupt mode
		if(pGpio_handle->gPIO_pinConfig.pin_mode==GPIO_MODE_FE_IT) //Only falling
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	795b      	ldrb	r3, [r3, #5]
 80004e0:	2b04      	cmp	r3, #4
 80004e2:	d115      	bne.n	8000510 <gpio_init+0x94>
		{
			EXTI->FTSR |= (1U<<pGpio_handle->gPIO_pinConfig.pin_number); //falling set
 80004e4:	4b6d      	ldr	r3, [pc, #436]	; (800069c <gpio_init+0x220>)
 80004e6:	68da      	ldr	r2, [r3, #12]
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	791b      	ldrb	r3, [r3, #4]
 80004ec:	4619      	mov	r1, r3
 80004ee:	2301      	movs	r3, #1
 80004f0:	408b      	lsls	r3, r1
 80004f2:	496a      	ldr	r1, [pc, #424]	; (800069c <gpio_init+0x220>)
 80004f4:	4313      	orrs	r3, r2
 80004f6:	60cb      	str	r3, [r1, #12]
			EXTI->RTSR &= ~(1U<<pGpio_handle->gPIO_pinConfig.pin_number);//rising reset
 80004f8:	4b68      	ldr	r3, [pc, #416]	; (800069c <gpio_init+0x220>)
 80004fa:	689a      	ldr	r2, [r3, #8]
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	791b      	ldrb	r3, [r3, #4]
 8000500:	4619      	mov	r1, r3
 8000502:	2301      	movs	r3, #1
 8000504:	408b      	lsls	r3, r1
 8000506:	43db      	mvns	r3, r3
 8000508:	4964      	ldr	r1, [pc, #400]	; (800069c <gpio_init+0x220>)
 800050a:	4013      	ands	r3, r2
 800050c:	608b      	str	r3, [r1, #8]
 800050e:	e031      	b.n	8000574 <gpio_init+0xf8>
		}
		else if(pGpio_handle->gPIO_pinConfig.pin_mode==GPIO_MODE_RE_IT) // only rising
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	795b      	ldrb	r3, [r3, #5]
 8000514:	2b05      	cmp	r3, #5
 8000516:	d115      	bne.n	8000544 <gpio_init+0xc8>
		{
			EXTI->RTSR |= (1U<<pGpio_handle->gPIO_pinConfig.pin_number);//rising set
 8000518:	4b60      	ldr	r3, [pc, #384]	; (800069c <gpio_init+0x220>)
 800051a:	689a      	ldr	r2, [r3, #8]
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	791b      	ldrb	r3, [r3, #4]
 8000520:	4619      	mov	r1, r3
 8000522:	2301      	movs	r3, #1
 8000524:	408b      	lsls	r3, r1
 8000526:	495d      	ldr	r1, [pc, #372]	; (800069c <gpio_init+0x220>)
 8000528:	4313      	orrs	r3, r2
 800052a:	608b      	str	r3, [r1, #8]
			EXTI->FTSR &= ~(1U<<pGpio_handle->gPIO_pinConfig.pin_number);//falling reset
 800052c:	4b5b      	ldr	r3, [pc, #364]	; (800069c <gpio_init+0x220>)
 800052e:	68da      	ldr	r2, [r3, #12]
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	791b      	ldrb	r3, [r3, #4]
 8000534:	4619      	mov	r1, r3
 8000536:	2301      	movs	r3, #1
 8000538:	408b      	lsls	r3, r1
 800053a:	43db      	mvns	r3, r3
 800053c:	4957      	ldr	r1, [pc, #348]	; (800069c <gpio_init+0x220>)
 800053e:	4013      	ands	r3, r2
 8000540:	60cb      	str	r3, [r1, #12]
 8000542:	e017      	b.n	8000574 <gpio_init+0xf8>
		}
		else if(pGpio_handle->gPIO_pinConfig.pin_mode==GPIO_MODE_FRE_IT) // falling + rising
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	795b      	ldrb	r3, [r3, #5]
 8000548:	2b06      	cmp	r3, #6
 800054a:	d113      	bne.n	8000574 <gpio_init+0xf8>
		{
			EXTI->RTSR |= (1U <<pGpio_handle->gPIO_pinConfig.pin_number); //rising set
 800054c:	4b53      	ldr	r3, [pc, #332]	; (800069c <gpio_init+0x220>)
 800054e:	689a      	ldr	r2, [r3, #8]
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	791b      	ldrb	r3, [r3, #4]
 8000554:	4619      	mov	r1, r3
 8000556:	2301      	movs	r3, #1
 8000558:	408b      	lsls	r3, r1
 800055a:	4950      	ldr	r1, [pc, #320]	; (800069c <gpio_init+0x220>)
 800055c:	4313      	orrs	r3, r2
 800055e:	608b      	str	r3, [r1, #8]
			EXTI->FTSR |= (1U <<pGpio_handle->gPIO_pinConfig.pin_number); //falling set
 8000560:	4b4e      	ldr	r3, [pc, #312]	; (800069c <gpio_init+0x220>)
 8000562:	68da      	ldr	r2, [r3, #12]
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	791b      	ldrb	r3, [r3, #4]
 8000568:	4619      	mov	r1, r3
 800056a:	2301      	movs	r3, #1
 800056c:	408b      	lsls	r3, r1
 800056e:	494b      	ldr	r1, [pc, #300]	; (800069c <gpio_init+0x220>)
 8000570:	4313      	orrs	r3, r2
 8000572:	60cb      	str	r3, [r1, #12]
		}
		//used port pin selection by SYSCF_EXTICRx
		SYSCFG_CLOCK_ENABLE();
 8000574:	4b4a      	ldr	r3, [pc, #296]	; (80006a0 <gpio_init+0x224>)
 8000576:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000578:	4a49      	ldr	r2, [pc, #292]	; (80006a0 <gpio_init+0x224>)
 800057a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800057e:	6453      	str	r3, [r2, #68]	; 0x44
		uint32_t syscfgr_exti_reg_no = pGpio_handle->gPIO_pinConfig.pin_number / 4;
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	791b      	ldrb	r3, [r3, #4]
 8000584:	089b      	lsrs	r3, r3, #2
 8000586:	b2db      	uxtb	r3, r3
 8000588:	613b      	str	r3, [r7, #16]
		uint32_t syscfgr_exti_reg_bit_no = pGpio_handle->gPIO_pinConfig.pin_number % 4;
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	791b      	ldrb	r3, [r3, #4]
 800058e:	f003 0303 	and.w	r3, r3, #3
 8000592:	60fb      	str	r3, [r7, #12]
		uint8_t port_code = get_port_code(pGpio_handle->pGpioX);
 8000594:	687b      	ldr	r3, [r7, #4]
 8000596:	681b      	ldr	r3, [r3, #0]
 8000598:	4618      	mov	r0, r3
 800059a:	f7ff ff1d 	bl	80003d8 <get_port_code>
 800059e:	4603      	mov	r3, r0
 80005a0:	72fb      	strb	r3, [r7, #11]
		SYSCFG->EXTICR[syscfgr_exti_reg_no] |= (1u<<(syscfgr_exti_reg_bit_no*4));
 80005a2:	4a40      	ldr	r2, [pc, #256]	; (80006a4 <gpio_init+0x228>)
 80005a4:	693b      	ldr	r3, [r7, #16]
 80005a6:	3302      	adds	r3, #2
 80005a8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80005ac:	68fb      	ldr	r3, [r7, #12]
 80005ae:	009b      	lsls	r3, r3, #2
 80005b0:	2101      	movs	r1, #1
 80005b2:	fa01 f303 	lsl.w	r3, r1, r3
 80005b6:	493b      	ldr	r1, [pc, #236]	; (80006a4 <gpio_init+0x228>)
 80005b8:	431a      	orrs	r2, r3
 80005ba:	693b      	ldr	r3, [r7, #16]
 80005bc:	3302      	adds	r3, #2
 80005be:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		//Enable IMR
		EXTI->IMR |= (1u<<pGpio_handle->gPIO_pinConfig.pin_number);
 80005c2:	4b36      	ldr	r3, [pc, #216]	; (800069c <gpio_init+0x220>)
 80005c4:	681a      	ldr	r2, [r3, #0]
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	791b      	ldrb	r3, [r3, #4]
 80005ca:	4619      	mov	r1, r3
 80005cc:	2301      	movs	r3, #1
 80005ce:	408b      	lsls	r3, r1
 80005d0:	4932      	ldr	r1, [pc, #200]	; (800069c <gpio_init+0x220>)
 80005d2:	4313      	orrs	r3, r2
 80005d4:	600b      	str	r3, [r1, #0]
		//NVIC
	}

	//speed ayarla
	temp = (pGpio_handle->gPIO_pinConfig.pin_speed << (2 * pGpio_handle->gPIO_pinConfig.pin_number));
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	799b      	ldrb	r3, [r3, #6]
 80005da:	461a      	mov	r2, r3
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	791b      	ldrb	r3, [r3, #4]
 80005e0:	005b      	lsls	r3, r3, #1
 80005e2:	fa02 f303 	lsl.w	r3, r2, r3
 80005e6:	617b      	str	r3, [r7, #20]
	pGpio_handle->pGpioX->OSPEEDR &= ~(0b11<<(2*pGpio_handle->gPIO_pinConfig.pin_number));
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	681b      	ldr	r3, [r3, #0]
 80005ec:	689a      	ldr	r2, [r3, #8]
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	791b      	ldrb	r3, [r3, #4]
 80005f2:	005b      	lsls	r3, r3, #1
 80005f4:	2103      	movs	r1, #3
 80005f6:	fa01 f303 	lsl.w	r3, r1, r3
 80005fa:	43db      	mvns	r3, r3
 80005fc:	4619      	mov	r1, r3
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	400a      	ands	r2, r1
 8000604:	609a      	str	r2, [r3, #8]
	pGpio_handle->pGpioX->OSPEEDR |=temp;
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	681b      	ldr	r3, [r3, #0]
 800060a:	6899      	ldr	r1, [r3, #8]
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	697a      	ldr	r2, [r7, #20]
 8000612:	430a      	orrs	r2, r1
 8000614:	609a      	str	r2, [r3, #8]

	//pull up pull down ayarla
	temp = (pGpio_handle->gPIO_pinConfig.pin_pupd << (2 * pGpio_handle->gPIO_pinConfig.pin_number));
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	7a1b      	ldrb	r3, [r3, #8]
 800061a:	461a      	mov	r2, r3
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	791b      	ldrb	r3, [r3, #4]
 8000620:	005b      	lsls	r3, r3, #1
 8000622:	fa02 f303 	lsl.w	r3, r2, r3
 8000626:	617b      	str	r3, [r7, #20]
	pGpio_handle->pGpioX->PUPDR &= ~(0b11<<(2*pGpio_handle->gPIO_pinConfig.pin_number));
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	681b      	ldr	r3, [r3, #0]
 800062c:	68da      	ldr	r2, [r3, #12]
 800062e:	687b      	ldr	r3, [r7, #4]
 8000630:	791b      	ldrb	r3, [r3, #4]
 8000632:	005b      	lsls	r3, r3, #1
 8000634:	2103      	movs	r1, #3
 8000636:	fa01 f303 	lsl.w	r3, r1, r3
 800063a:	43db      	mvns	r3, r3
 800063c:	4619      	mov	r1, r3
 800063e:	687b      	ldr	r3, [r7, #4]
 8000640:	681b      	ldr	r3, [r3, #0]
 8000642:	400a      	ands	r2, r1
 8000644:	60da      	str	r2, [r3, #12]
	pGpio_handle->pGpioX->PUPDR |=temp;
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	681b      	ldr	r3, [r3, #0]
 800064a:	68d9      	ldr	r1, [r3, #12]
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	697a      	ldr	r2, [r7, #20]
 8000652:	430a      	orrs	r2, r1
 8000654:	60da      	str	r2, [r3, #12]

	//otype ayarla
	temp = (pGpio_handle->gPIO_pinConfig.pin_otype << (pGpio_handle->gPIO_pinConfig.pin_number));
 8000656:	687b      	ldr	r3, [r7, #4]
 8000658:	79db      	ldrb	r3, [r3, #7]
 800065a:	461a      	mov	r2, r3
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	791b      	ldrb	r3, [r3, #4]
 8000660:	fa02 f303 	lsl.w	r3, r2, r3
 8000664:	617b      	str	r3, [r7, #20]
	pGpio_handle->pGpioX->OTYPER &= ~(0b1<<(pGpio_handle->gPIO_pinConfig.pin_number));
 8000666:	687b      	ldr	r3, [r7, #4]
 8000668:	681b      	ldr	r3, [r3, #0]
 800066a:	685a      	ldr	r2, [r3, #4]
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	791b      	ldrb	r3, [r3, #4]
 8000670:	4619      	mov	r1, r3
 8000672:	2301      	movs	r3, #1
 8000674:	408b      	lsls	r3, r1
 8000676:	43db      	mvns	r3, r3
 8000678:	4619      	mov	r1, r3
 800067a:	687b      	ldr	r3, [r7, #4]
 800067c:	681b      	ldr	r3, [r3, #0]
 800067e:	400a      	ands	r2, r1
 8000680:	605a      	str	r2, [r3, #4]
	pGpio_handle->pGpioX->OTYPER |=temp;
 8000682:	687b      	ldr	r3, [r7, #4]
 8000684:	681b      	ldr	r3, [r3, #0]
 8000686:	6859      	ldr	r1, [r3, #4]
 8000688:	687b      	ldr	r3, [r7, #4]
 800068a:	681b      	ldr	r3, [r3, #0]
 800068c:	697a      	ldr	r2, [r7, #20]
 800068e:	430a      	orrs	r2, r1
 8000690:	605a      	str	r2, [r3, #4]
	//bi portun pinine 1 mi 0 mı yazacağız....




}
 8000692:	bf00      	nop
 8000694:	3718      	adds	r7, #24
 8000696:	46bd      	mov	sp, r7
 8000698:	bd80      	pop	{r7, pc}
 800069a:	bf00      	nop
 800069c:	40013c00 	.word	0x40013c00
 80006a0:	40023800 	.word	0x40023800
 80006a4:	40013800 	.word	0x40013800

080006a8 <gpio_writeto_output_pin>:


void  gpio_writeto_output_pin(GPIO_RegDef_t *pGpiox ,uint8_t pin_no, uint8_t val){
 80006a8:	b480      	push	{r7}
 80006aa:	b083      	sub	sp, #12
 80006ac:	af00      	add	r7, sp, #0
 80006ae:	6078      	str	r0, [r7, #4]
 80006b0:	460b      	mov	r3, r1
 80006b2:	70fb      	strb	r3, [r7, #3]
 80006b4:	4613      	mov	r3, r2
 80006b6:	70bb      	strb	r3, [r7, #2]

	if(val==GPIO_PIN_SET)
 80006b8:	78bb      	ldrb	r3, [r7, #2]
 80006ba:	2b01      	cmp	r3, #1
 80006bc:	d109      	bne.n	80006d2 <gpio_writeto_output_pin+0x2a>
		pGpiox->ODR |= (1u<<pin_no);
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	695a      	ldr	r2, [r3, #20]
 80006c2:	78fb      	ldrb	r3, [r7, #3]
 80006c4:	2101      	movs	r1, #1
 80006c6:	fa01 f303 	lsl.w	r3, r1, r3
 80006ca:	431a      	orrs	r2, r3
 80006cc:	687b      	ldr	r3, [r7, #4]
 80006ce:	615a      	str	r2, [r3, #20]
	else
		pGpiox->ODR &=~ (1u<<pin_no);


}
 80006d0:	e009      	b.n	80006e6 <gpio_writeto_output_pin+0x3e>
		pGpiox->ODR &=~ (1u<<pin_no);
 80006d2:	687b      	ldr	r3, [r7, #4]
 80006d4:	695a      	ldr	r2, [r3, #20]
 80006d6:	78fb      	ldrb	r3, [r7, #3]
 80006d8:	2101      	movs	r1, #1
 80006da:	fa01 f303 	lsl.w	r3, r1, r3
 80006de:	43db      	mvns	r3, r3
 80006e0:	401a      	ands	r2, r3
 80006e2:	687b      	ldr	r3, [r7, #4]
 80006e4:	615a      	str	r2, [r3, #20]
}
 80006e6:	bf00      	nop
 80006e8:	370c      	adds	r7, #12
 80006ea:	46bd      	mov	sp, r7
 80006ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006f0:	4770      	bx	lr

080006f2 <gpio_toggleto_output_pin>:
	pGpiox->ODR=val; //bitsel olarak değil direk data olarak yazıyoruz.

}


void gpio_toggleto_output_pin(GPIO_RegDef_t *pGpiox ,uint8_t pin_no){
 80006f2:	b480      	push	{r7}
 80006f4:	b083      	sub	sp, #12
 80006f6:	af00      	add	r7, sp, #0
 80006f8:	6078      	str	r0, [r7, #4]
 80006fa:	460b      	mov	r3, r1
 80006fc:	70fb      	strb	r3, [r7, #3]
	pGpiox->ODR ^=(1u<<pin_no);
 80006fe:	687b      	ldr	r3, [r7, #4]
 8000700:	695a      	ldr	r2, [r3, #20]
 8000702:	78fb      	ldrb	r3, [r7, #3]
 8000704:	2101      	movs	r1, #1
 8000706:	fa01 f303 	lsl.w	r3, r1, r3
 800070a:	405a      	eors	r2, r3
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	615a      	str	r2, [r3, #20]

}
 8000710:	bf00      	nop
 8000712:	370c      	adds	r7, #12
 8000714:	46bd      	mov	sp, r7
 8000716:	f85d 7b04 	ldr.w	r7, [sp], #4
 800071a:	4770      	bx	lr

0800071c <clear_pending_reg>:
	return res!= 0? GPIO_PIN_SET : GPIO_PIN_RESET;
}



void clear_pending_reg(uint8_t pin_no){
 800071c:	b480      	push	{r7}
 800071e:	b083      	sub	sp, #12
 8000720:	af00      	add	r7, sp, #0
 8000722:	4603      	mov	r3, r0
 8000724:	71fb      	strb	r3, [r7, #7]
	//clear PR
	if(EXTI->PR & (1<<pin_no))
 8000726:	4b0c      	ldr	r3, [pc, #48]	; (8000758 <clear_pending_reg+0x3c>)
 8000728:	695b      	ldr	r3, [r3, #20]
 800072a:	79fa      	ldrb	r2, [r7, #7]
 800072c:	2101      	movs	r1, #1
 800072e:	fa01 f202 	lsl.w	r2, r1, r2
 8000732:	4013      	ands	r3, r2
 8000734:	2b00      	cmp	r3, #0
 8000736:	d008      	beq.n	800074a <clear_pending_reg+0x2e>
		EXTI->PR |= (1U<<pin_no);
 8000738:	4b07      	ldr	r3, [pc, #28]	; (8000758 <clear_pending_reg+0x3c>)
 800073a:	695a      	ldr	r2, [r3, #20]
 800073c:	79fb      	ldrb	r3, [r7, #7]
 800073e:	2101      	movs	r1, #1
 8000740:	fa01 f303 	lsl.w	r3, r1, r3
 8000744:	4904      	ldr	r1, [pc, #16]	; (8000758 <clear_pending_reg+0x3c>)
 8000746:	4313      	orrs	r3, r2
 8000748:	614b      	str	r3, [r1, #20]
}
 800074a:	bf00      	nop
 800074c:	370c      	adds	r7, #12
 800074e:	46bd      	mov	sp, r7
 8000750:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000754:	4770      	bx	lr
 8000756:	bf00      	nop
 8000758:	40013c00 	.word	0x40013c00

0800075c <EXTI0_IRQHandler>:
#define BTN_RELEASED 0

uint32_t g_random_number;


void EXTI0_IRQHandler(void){
 800075c:	b580      	push	{r7, lr}
 800075e:	af00      	add	r7, sp, #0
	mini_delay();
 8000760:	f000 f904 	bl	800096c <mini_delay>
	clear_pending_reg(GPIO_PIN_NO_0);
 8000764:	2000      	movs	r0, #0
 8000766:	f7ff ffd9 	bl	800071c <clear_pending_reg>
	gpio_toggleto_output_pin(GPIOD, GPIO_PIN_NO_15);
 800076a:	210f      	movs	r1, #15
 800076c:	4802      	ldr	r0, [pc, #8]	; (8000778 <EXTI0_IRQHandler+0x1c>)
 800076e:	f7ff ffc0 	bl	80006f2 <gpio_toggleto_output_pin>
}
 8000772:	bf00      	nop
 8000774:	bd80      	pop	{r7, pc}
 8000776:	bf00      	nop
 8000778:	40020c00 	.word	0x40020c00

0800077c <task_led>:



void task_led(){
 800077c:	b580      	push	{r7, lr}
 800077e:	af00      	add	r7, sp, #0
	}state=S_LED_OFF;

	static clock_t t0; //duruma ilk giriş sati
	static clock_t t1; //güncel giriş saati

	t1 = clock();
 8000780:	f7ff fd9e 	bl	80002c0 <clock>
 8000784:	4603      	mov	r3, r0
 8000786:	4a1c      	ldr	r2, [pc, #112]	; (80007f8 <task_led+0x7c>)
 8000788:	6013      	str	r3, [r2, #0]

	switch(state){
 800078a:	4b1c      	ldr	r3, [pc, #112]	; (80007fc <task_led+0x80>)
 800078c:	781b      	ldrb	r3, [r3, #0]
 800078e:	2b00      	cmp	r3, #0
 8000790:	d002      	beq.n	8000798 <task_led+0x1c>
 8000792:	2b01      	cmp	r3, #1
 8000794:	d015      	beq.n	80007c2 <task_led+0x46>
			t0=t1;
			state=S_LED_OFF;
		}
		break;
	}
}
 8000796:	e02c      	b.n	80007f2 <task_led+0x76>
		if(t1>=t0+800)
 8000798:	4b19      	ldr	r3, [pc, #100]	; (8000800 <task_led+0x84>)
 800079a:	681b      	ldr	r3, [r3, #0]
 800079c:	f503 7248 	add.w	r2, r3, #800	; 0x320
 80007a0:	4b15      	ldr	r3, [pc, #84]	; (80007f8 <task_led+0x7c>)
 80007a2:	681b      	ldr	r3, [r3, #0]
 80007a4:	429a      	cmp	r2, r3
 80007a6:	d821      	bhi.n	80007ec <task_led+0x70>
			gpio_writeto_output_pin(GPIOD,GPIO_PIN_NO_15,GPIO_PIN_SET);
 80007a8:	2201      	movs	r2, #1
 80007aa:	210f      	movs	r1, #15
 80007ac:	4815      	ldr	r0, [pc, #84]	; (8000804 <task_led+0x88>)
 80007ae:	f7ff ff7b 	bl	80006a8 <gpio_writeto_output_pin>
			t0=t1;
 80007b2:	4b11      	ldr	r3, [pc, #68]	; (80007f8 <task_led+0x7c>)
 80007b4:	681b      	ldr	r3, [r3, #0]
 80007b6:	4a12      	ldr	r2, [pc, #72]	; (8000800 <task_led+0x84>)
 80007b8:	6013      	str	r3, [r2, #0]
			state=S_LED_ON;
 80007ba:	4b10      	ldr	r3, [pc, #64]	; (80007fc <task_led+0x80>)
 80007bc:	2201      	movs	r2, #1
 80007be:	701a      	strb	r2, [r3, #0]
		break;
 80007c0:	e014      	b.n	80007ec <task_led+0x70>
		if(t1>=t0+200){
 80007c2:	4b0f      	ldr	r3, [pc, #60]	; (8000800 <task_led+0x84>)
 80007c4:	681b      	ldr	r3, [r3, #0]
 80007c6:	f103 02c8 	add.w	r2, r3, #200	; 0xc8
 80007ca:	4b0b      	ldr	r3, [pc, #44]	; (80007f8 <task_led+0x7c>)
 80007cc:	681b      	ldr	r3, [r3, #0]
 80007ce:	429a      	cmp	r2, r3
 80007d0:	d80e      	bhi.n	80007f0 <task_led+0x74>
			gpio_writeto_output_pin(GPIOD, GPIO_PIN_NO_15, GPIO_PIN_RESET);
 80007d2:	2200      	movs	r2, #0
 80007d4:	210f      	movs	r1, #15
 80007d6:	480b      	ldr	r0, [pc, #44]	; (8000804 <task_led+0x88>)
 80007d8:	f7ff ff66 	bl	80006a8 <gpio_writeto_output_pin>
			t0=t1;
 80007dc:	4b06      	ldr	r3, [pc, #24]	; (80007f8 <task_led+0x7c>)
 80007de:	681b      	ldr	r3, [r3, #0]
 80007e0:	4a07      	ldr	r2, [pc, #28]	; (8000800 <task_led+0x84>)
 80007e2:	6013      	str	r3, [r2, #0]
			state=S_LED_OFF;
 80007e4:	4b05      	ldr	r3, [pc, #20]	; (80007fc <task_led+0x80>)
 80007e6:	2200      	movs	r2, #0
 80007e8:	701a      	strb	r2, [r3, #0]
		break;
 80007ea:	e001      	b.n	80007f0 <task_led+0x74>
		break;
 80007ec:	bf00      	nop
 80007ee:	e000      	b.n	80007f2 <task_led+0x76>
		break;
 80007f0:	bf00      	nop
}
 80007f2:	bf00      	nop
 80007f4:	bd80      	pop	{r7, pc}
 80007f6:	bf00      	nop
 80007f8:	20000020 	.word	0x20000020
 80007fc:	20000024 	.word	0x20000024
 8000800:	20000028 	.word	0x20000028
 8000804:	40020c00 	.word	0x40020c00

08000808 <main>:


int main(void)
{
 8000808:	b580      	push	{r7, lr}
 800080a:	b08c      	sub	sp, #48	; 0x30
 800080c:	af00      	add	r7, sp, #0
	gpio_init(&user_button);
	nvic_irqno_enable(IRQ_EXTI0);
**/
	//rng_init();

	GPIO_Handle_t Gpio_pd_blue={GPIOD,{GPIO_PIN_NO_15,GPIO_MODE_OUT,GPIO_SPEED_MEDIUM,GPIO_OTYPE_PP,GPIO_NO_PUPD}};
 800080e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000812:	2200      	movs	r2, #0
 8000814:	601a      	str	r2, [r3, #0]
 8000816:	605a      	str	r2, [r3, #4]
 8000818:	609a      	str	r2, [r3, #8]
 800081a:	4b27      	ldr	r3, [pc, #156]	; (80008b8 <main+0xb0>)
 800081c:	627b      	str	r3, [r7, #36]	; 0x24
 800081e:	230f      	movs	r3, #15
 8000820:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 8000824:	2301      	movs	r3, #1
 8000826:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
 800082a:	2301      	movs	r3, #1
 800082c:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
	GPIO_Handle_t Gpio_pd_red={GPIOD,{GPIO_PIN_NO_14,GPIO_MODE_OUT,GPIO_SPEED_MEDIUM,GPIO_OTYPE_PP,GPIO_NO_PUPD}};
 8000830:	f107 0318 	add.w	r3, r7, #24
 8000834:	2200      	movs	r2, #0
 8000836:	601a      	str	r2, [r3, #0]
 8000838:	605a      	str	r2, [r3, #4]
 800083a:	609a      	str	r2, [r3, #8]
 800083c:	4b1e      	ldr	r3, [pc, #120]	; (80008b8 <main+0xb0>)
 800083e:	61bb      	str	r3, [r7, #24]
 8000840:	230e      	movs	r3, #14
 8000842:	773b      	strb	r3, [r7, #28]
 8000844:	2301      	movs	r3, #1
 8000846:	777b      	strb	r3, [r7, #29]
 8000848:	2301      	movs	r3, #1
 800084a:	77bb      	strb	r3, [r7, #30]
	GPIO_Handle_t Gpio_pd_orange={GPIOD,{GPIO_PIN_NO_13,GPIO_MODE_OUT,GPIO_SPEED_MEDIUM,GPIO_OTYPE_PP,GPIO_NO_PUPD}};
 800084c:	f107 030c 	add.w	r3, r7, #12
 8000850:	2200      	movs	r2, #0
 8000852:	601a      	str	r2, [r3, #0]
 8000854:	605a      	str	r2, [r3, #4]
 8000856:	609a      	str	r2, [r3, #8]
 8000858:	4b17      	ldr	r3, [pc, #92]	; (80008b8 <main+0xb0>)
 800085a:	60fb      	str	r3, [r7, #12]
 800085c:	230d      	movs	r3, #13
 800085e:	743b      	strb	r3, [r7, #16]
 8000860:	2301      	movs	r3, #1
 8000862:	747b      	strb	r3, [r7, #17]
 8000864:	2301      	movs	r3, #1
 8000866:	74bb      	strb	r3, [r7, #18]
	GPIO_Handle_t Gpio_pd_green={GPIOD,{GPIO_PIN_NO_12,GPIO_MODE_OUT,GPIO_SPEED_MEDIUM,GPIO_OTYPE_PP,GPIO_NO_PUPD}};
 8000868:	463b      	mov	r3, r7
 800086a:	2200      	movs	r2, #0
 800086c:	601a      	str	r2, [r3, #0]
 800086e:	605a      	str	r2, [r3, #4]
 8000870:	609a      	str	r2, [r3, #8]
 8000872:	4b11      	ldr	r3, [pc, #68]	; (80008b8 <main+0xb0>)
 8000874:	603b      	str	r3, [r7, #0]
 8000876:	230c      	movs	r3, #12
 8000878:	713b      	strb	r3, [r7, #4]
 800087a:	2301      	movs	r3, #1
 800087c:	717b      	strb	r3, [r7, #5]
 800087e:	2301      	movs	r3, #1
 8000880:	71bb      	strb	r3, [r7, #6]

	gpio_init(&Gpio_pd_blue);
 8000882:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000886:	4618      	mov	r0, r3
 8000888:	f7ff fdf8 	bl	800047c <gpio_init>
	gpio_init(&Gpio_pd_green);
 800088c:	463b      	mov	r3, r7
 800088e:	4618      	mov	r0, r3
 8000890:	f7ff fdf4 	bl	800047c <gpio_init>
	gpio_init(&Gpio_pd_red);
 8000894:	f107 0318 	add.w	r3, r7, #24
 8000898:	4618      	mov	r0, r3
 800089a:	f7ff fdef 	bl	800047c <gpio_init>
	gpio_init(&Gpio_pd_orange);
 800089e:	f107 030c 	add.w	r3, r7, #12
 80008a2:	4618      	mov	r0, r3
 80008a4:	f7ff fdea 	bl	800047c <gpio_init>

	systick_config(SYSTEM_FREQ/1000); //1ms de bi systic kesme
 80008a8:	f44f 507a 	mov.w	r0, #16000	; 0x3e80
 80008ac:	f7ff fcd4 	bl	8000258 <systick_config>

    while(1)
    {
    	//delay();
    	//toggle_board_random_leds();
    	task_led();
 80008b0:	f7ff ff64 	bl	800077c <task_led>
 80008b4:	e7fc      	b.n	80008b0 <main+0xa8>
 80008b6:	bf00      	nop
 80008b8:	40020c00 	.word	0x40020c00

080008bc <HASH_RNG_IRQHandler>:
	nvic_irqno_enable(IRQ_HASH_RNG);

}


void HASH_RNG_IRQHandler(void){
 80008bc:	b580      	push	{r7, lr}
 80008be:	af00      	add	r7, sp, #0
	if(((RNG->SR & RNG_CEIS)==0) && ((RNG->SR & RNG_SEIS)==0) && ((RNG->SR & RNG_DRDY)==1))
 80008c0:	4b28      	ldr	r3, [pc, #160]	; (8000964 <HASH_RNG_IRQHandler+0xa8>)
 80008c2:	685b      	ldr	r3, [r3, #4]
 80008c4:	f003 0320 	and.w	r3, r3, #32
 80008c8:	2b00      	cmp	r3, #0
 80008ca:	d11b      	bne.n	8000904 <HASH_RNG_IRQHandler+0x48>
 80008cc:	4b25      	ldr	r3, [pc, #148]	; (8000964 <HASH_RNG_IRQHandler+0xa8>)
 80008ce:	685b      	ldr	r3, [r3, #4]
 80008d0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80008d4:	2b00      	cmp	r3, #0
 80008d6:	d115      	bne.n	8000904 <HASH_RNG_IRQHandler+0x48>
 80008d8:	4b22      	ldr	r3, [pc, #136]	; (8000964 <HASH_RNG_IRQHandler+0xa8>)
 80008da:	685b      	ldr	r3, [r3, #4]
 80008dc:	f003 0301 	and.w	r3, r3, #1
 80008e0:	2b01      	cmp	r3, #1
 80008e2:	d10f      	bne.n	8000904 <HASH_RNG_IRQHandler+0x48>
	{
		//g_random_number = RNG->DR;
		RNG->CR &= ~IE;
 80008e4:	4b1f      	ldr	r3, [pc, #124]	; (8000964 <HASH_RNG_IRQHandler+0xa8>)
 80008e6:	681b      	ldr	r3, [r3, #0]
 80008e8:	4a1e      	ldr	r2, [pc, #120]	; (8000964 <HASH_RNG_IRQHandler+0xa8>)
 80008ea:	f023 0308 	bic.w	r3, r3, #8
 80008ee:	6013      	str	r3, [r2, #0]
		RNG->CR &= ~RNGEN;
 80008f0:	4b1c      	ldr	r3, [pc, #112]	; (8000964 <HASH_RNG_IRQHandler+0xa8>)
 80008f2:	681b      	ldr	r3, [r3, #0]
 80008f4:	4a1b      	ldr	r2, [pc, #108]	; (8000964 <HASH_RNG_IRQHandler+0xa8>)
 80008f6:	f023 0304 	bic.w	r3, r3, #4
 80008fa:	6013      	str	r3, [r2, #0]
		nvic_irqno_disable(IRQ_HASH_RNG);
 80008fc:	2050      	movs	r0, #80	; 0x50
 80008fe:	f7ff fc73 	bl	80001e8 <nvic_irqno_disable>
 8000902:	e02d      	b.n	8000960 <HASH_RNG_IRQHandler+0xa4>
	}else {//hatalı durum düzeltme

		if((RNG->SR & RNG_CEIS)==1){
 8000904:	4b17      	ldr	r3, [pc, #92]	; (8000964 <HASH_RNG_IRQHandler+0xa8>)
 8000906:	685b      	ldr	r3, [r3, #4]
 8000908:	f003 0320 	and.w	r3, r3, #32
 800090c:	2b01      	cmp	r3, #1
 800090e:	d105      	bne.n	800091c <HASH_RNG_IRQHandler+0x60>
			RNG->CR &= ~RNG_CEIS;
 8000910:	4b14      	ldr	r3, [pc, #80]	; (8000964 <HASH_RNG_IRQHandler+0xa8>)
 8000912:	681b      	ldr	r3, [r3, #0]
 8000914:	4a13      	ldr	r2, [pc, #76]	; (8000964 <HASH_RNG_IRQHandler+0xa8>)
 8000916:	f023 0320 	bic.w	r3, r3, #32
 800091a:	6013      	str	r3, [r2, #0]
		}
		if((RNG->SR & RNG_SEIS)==1){
 800091c:	4b11      	ldr	r3, [pc, #68]	; (8000964 <HASH_RNG_IRQHandler+0xa8>)
 800091e:	685b      	ldr	r3, [r3, #4]
 8000920:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000924:	2b01      	cmp	r3, #1
 8000926:	d105      	bne.n	8000934 <HASH_RNG_IRQHandler+0x78>
			RNG->CR &= ~RNG_SEIS;
 8000928:	4b0e      	ldr	r3, [pc, #56]	; (8000964 <HASH_RNG_IRQHandler+0xa8>)
 800092a:	681b      	ldr	r3, [r3, #0]
 800092c:	4a0d      	ldr	r2, [pc, #52]	; (8000964 <HASH_RNG_IRQHandler+0xa8>)
 800092e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000932:	6013      	str	r3, [r2, #0]
		}
		//resetle ve yeniden başlat
		RCC->AHB2STR = RNGRST;//resetleme ayarı ama bi alttaki satırdaki gibi tekrar açmazsan kapalı kalır.
 8000934:	4b0c      	ldr	r3, [pc, #48]	; (8000968 <HASH_RNG_IRQHandler+0xac>)
 8000936:	2240      	movs	r2, #64	; 0x40
 8000938:	615a      	str	r2, [r3, #20]
		RCC->AHB2STR &= ~RNGRST;
 800093a:	4b0b      	ldr	r3, [pc, #44]	; (8000968 <HASH_RNG_IRQHandler+0xac>)
 800093c:	695b      	ldr	r3, [r3, #20]
 800093e:	4a0a      	ldr	r2, [pc, #40]	; (8000968 <HASH_RNG_IRQHandler+0xac>)
 8000940:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000944:	6153      	str	r3, [r2, #20]
		RNG->CR |= RNGEN;
 8000946:	4b07      	ldr	r3, [pc, #28]	; (8000964 <HASH_RNG_IRQHandler+0xa8>)
 8000948:	681b      	ldr	r3, [r3, #0]
 800094a:	4a06      	ldr	r2, [pc, #24]	; (8000964 <HASH_RNG_IRQHandler+0xa8>)
 800094c:	f043 0304 	orr.w	r3, r3, #4
 8000950:	6013      	str	r3, [r2, #0]
		RNG->CR |= IE;
 8000952:	4b04      	ldr	r3, [pc, #16]	; (8000964 <HASH_RNG_IRQHandler+0xa8>)
 8000954:	681b      	ldr	r3, [r3, #0]
 8000956:	4a03      	ldr	r2, [pc, #12]	; (8000964 <HASH_RNG_IRQHandler+0xa8>)
 8000958:	f043 0308 	orr.w	r3, r3, #8
 800095c:	6013      	str	r3, [r2, #0]
	}




}
 800095e:	bf00      	nop
 8000960:	bf00      	nop
 8000962:	bd80      	pop	{r7, pc}
 8000964:	50060800 	.word	0x50060800
 8000968:	40023800 	.word	0x40023800

0800096c <mini_delay>:
void delay(){
	for(int i=0;i<1000000;++i)
		;
}

void mini_delay(){
 800096c:	b480      	push	{r7}
 800096e:	b083      	sub	sp, #12
 8000970:	af00      	add	r7, sp, #0
	for(int i=0;i<100000;++i)
 8000972:	2300      	movs	r3, #0
 8000974:	607b      	str	r3, [r7, #4]
 8000976:	e002      	b.n	800097e <mini_delay+0x12>
 8000978:	687b      	ldr	r3, [r7, #4]
 800097a:	3301      	adds	r3, #1
 800097c:	607b      	str	r3, [r7, #4]
 800097e:	687b      	ldr	r3, [r7, #4]
 8000980:	4a04      	ldr	r2, [pc, #16]	; (8000994 <mini_delay+0x28>)
 8000982:	4293      	cmp	r3, r2
 8000984:	ddf8      	ble.n	8000978 <mini_delay+0xc>
		;
}
 8000986:	bf00      	nop
 8000988:	bf00      	nop
 800098a:	370c      	adds	r7, #12
 800098c:	46bd      	mov	sp, r7
 800098e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000992:	4770      	bx	lr
 8000994:	0001869f 	.word	0x0001869f

08000998 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000998:	480d      	ldr	r0, [pc, #52]	; (80009d0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800099a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800099c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80009a0:	480c      	ldr	r0, [pc, #48]	; (80009d4 <LoopForever+0x6>)
  ldr r1, =_edata
 80009a2:	490d      	ldr	r1, [pc, #52]	; (80009d8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80009a4:	4a0d      	ldr	r2, [pc, #52]	; (80009dc <LoopForever+0xe>)
  movs r3, #0
 80009a6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80009a8:	e002      	b.n	80009b0 <LoopCopyDataInit>

080009aa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80009aa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80009ac:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80009ae:	3304      	adds	r3, #4

080009b0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80009b0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80009b2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80009b4:	d3f9      	bcc.n	80009aa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80009b6:	4a0a      	ldr	r2, [pc, #40]	; (80009e0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80009b8:	4c0a      	ldr	r4, [pc, #40]	; (80009e4 <LoopForever+0x16>)
  movs r3, #0
 80009ba:	2300      	movs	r3, #0
  b LoopFillZerobss
 80009bc:	e001      	b.n	80009c2 <LoopFillZerobss>

080009be <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80009be:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80009c0:	3204      	adds	r2, #4

080009c2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80009c2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80009c4:	d3fb      	bcc.n	80009be <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80009c6:	f000 f811 	bl	80009ec <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80009ca:	f7ff ff1d 	bl	8000808 <main>

080009ce <LoopForever>:

LoopForever:
    b LoopForever
 80009ce:	e7fe      	b.n	80009ce <LoopForever>
  ldr   r0, =_estack
 80009d0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80009d4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80009d8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80009dc:	08000a54 	.word	0x08000a54
  ldr r2, =_sbss
 80009e0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80009e4:	2000002c 	.word	0x2000002c

080009e8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80009e8:	e7fe      	b.n	80009e8 <ADC_IRQHandler>
	...

080009ec <__libc_init_array>:
 80009ec:	b570      	push	{r4, r5, r6, lr}
 80009ee:	4d0d      	ldr	r5, [pc, #52]	; (8000a24 <__libc_init_array+0x38>)
 80009f0:	4c0d      	ldr	r4, [pc, #52]	; (8000a28 <__libc_init_array+0x3c>)
 80009f2:	1b64      	subs	r4, r4, r5
 80009f4:	10a4      	asrs	r4, r4, #2
 80009f6:	2600      	movs	r6, #0
 80009f8:	42a6      	cmp	r6, r4
 80009fa:	d109      	bne.n	8000a10 <__libc_init_array+0x24>
 80009fc:	4d0b      	ldr	r5, [pc, #44]	; (8000a2c <__libc_init_array+0x40>)
 80009fe:	4c0c      	ldr	r4, [pc, #48]	; (8000a30 <__libc_init_array+0x44>)
 8000a00:	f000 f818 	bl	8000a34 <_init>
 8000a04:	1b64      	subs	r4, r4, r5
 8000a06:	10a4      	asrs	r4, r4, #2
 8000a08:	2600      	movs	r6, #0
 8000a0a:	42a6      	cmp	r6, r4
 8000a0c:	d105      	bne.n	8000a1a <__libc_init_array+0x2e>
 8000a0e:	bd70      	pop	{r4, r5, r6, pc}
 8000a10:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a14:	4798      	blx	r3
 8000a16:	3601      	adds	r6, #1
 8000a18:	e7ee      	b.n	80009f8 <__libc_init_array+0xc>
 8000a1a:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a1e:	4798      	blx	r3
 8000a20:	3601      	adds	r6, #1
 8000a22:	e7f2      	b.n	8000a0a <__libc_init_array+0x1e>
 8000a24:	08000a4c 	.word	0x08000a4c
 8000a28:	08000a4c 	.word	0x08000a4c
 8000a2c:	08000a4c 	.word	0x08000a4c
 8000a30:	08000a50 	.word	0x08000a50

08000a34 <_init>:
 8000a34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a36:	bf00      	nop
 8000a38:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a3a:	bc08      	pop	{r3}
 8000a3c:	469e      	mov	lr, r3
 8000a3e:	4770      	bx	lr

08000a40 <_fini>:
 8000a40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a42:	bf00      	nop
 8000a44:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a46:	bc08      	pop	{r3}
 8000a48:	469e      	mov	lr, r3
 8000a4a:	4770      	bx	lr
